[{"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\404.tsx":"1","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\change-password.tsx":"2","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\forgot-password.tsx":"3","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\resend-email.tsx":"4","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signin.tsx":"5","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signup.tsx":"6","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\index.tsx":"7","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\maintenance.tsx":"8","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\test.tsx":"9","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_app.tsx":"10","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_document.tsx":"11","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\Button.tsx":"12","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\Card.tsx":"13","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\PlanCard.tsx":"14","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\ReviewCard.tsx":"15","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\StoreCard.tsx":"16","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Dropdown.tsx":"17","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Footers\\Footer.tsx":"18","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Form.tsx":"19","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Input.tsx":"20","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\index.tsx":"21","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Dashboard.tsx":"22","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Guest.tsx":"23","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Layout.tsx":"24","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modal.tsx":"25","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Modal.tsx":"26","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Navigation.tsx":"27","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingDisplay.tsx":"28","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingIcon.tsx":"29","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\Ratings.tsx":"30","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\StarIcon.tsx":"31","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\ErrorMsg.tsx":"32","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\403.tsx":"33","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\index.tsx":"34","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\riwayat-transaksi.tsx":"35","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\test.tsx":"36","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\index.tsx":"37","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\inventory.tsx":"38","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk\\[pid].tsx":"39","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Toko.tsx":"40","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\ModalEmpty.tsx":"41","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Notification.tsx":"42","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\table.tsx":"43","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Table\\Table.tsx":"44"},{"size":914,"mtime":1655442434299,"results":"45","hashOfConfig":"46"},{"size":1567,"mtime":1655442434307,"results":"47","hashOfConfig":"46"},{"size":3037,"mtime":1655442434307,"results":"48","hashOfConfig":"46"},{"size":1316,"mtime":1655442434307,"results":"49","hashOfConfig":"46"},{"size":5503,"mtime":1655442434307,"results":"50","hashOfConfig":"46"},{"size":6711,"mtime":1655442434307,"results":"51","hashOfConfig":"46"},{"size":9955,"mtime":1655442434307,"results":"52","hashOfConfig":"46"},{"size":916,"mtime":1655442434307,"results":"53","hashOfConfig":"46"},{"size":3731,"mtime":1655442434315,"results":"54","hashOfConfig":"46"},{"size":527,"mtime":1655442434299,"results":"55","hashOfConfig":"46"},{"size":622,"mtime":1655442434299,"results":"56","hashOfConfig":"46"},{"size":867,"mtime":1655442434267,"results":"57","hashOfConfig":"46"},{"size":493,"mtime":1655442434267,"results":"58","hashOfConfig":"46"},{"size":945,"mtime":1655442434267,"results":"59","hashOfConfig":"46"},{"size":888,"mtime":1655442434267,"results":"60","hashOfConfig":"46"},{"size":1109,"mtime":1655442434267,"results":"61","hashOfConfig":"46"},{"size":811,"mtime":1655442434267,"results":"62","hashOfConfig":"46"},{"size":757,"mtime":1655442434275,"results":"63","hashOfConfig":"46"},{"size":181,"mtime":1655442434275,"results":"64","hashOfConfig":"46"},{"size":879,"mtime":1655442434275,"results":"65","hashOfConfig":"46"},{"size":1211,"mtime":1655442434291,"results":"66","hashOfConfig":"46"},{"size":2204,"mtime":1655442434275,"results":"67","hashOfConfig":"46"},{"size":335,"mtime":1655442434275,"results":"68","hashOfConfig":"46"},{"size":259,"mtime":1655442434275,"results":"69","hashOfConfig":"46"},{"size":480,"mtime":1655442434283,"results":"70","hashOfConfig":"46"},{"size":2266,"mtime":1655442434283,"results":"71","hashOfConfig":"46"},{"size":896,"mtime":1655442434283,"results":"72","hashOfConfig":"46"},{"size":507,"mtime":1655442434283,"results":"73","hashOfConfig":"46"},{"size":928,"mtime":1655442434291,"results":"74","hashOfConfig":"46"},{"size":1814,"mtime":1655442434291,"results":"75","hashOfConfig":"46"},{"size":731,"mtime":1655442434291,"results":"76","hashOfConfig":"46"},{"size":1214,"mtime":1655442434275,"results":"77","hashOfConfig":"46"},{"size":783,"mtime":1655442434299,"results":"78","hashOfConfig":"46"},{"size":6841,"mtime":1655442434315,"results":"79","hashOfConfig":"46"},{"size":3505,"mtime":1655442434315,"results":"80","hashOfConfig":"46"},{"size":6642,"mtime":1655442434323,"results":"81","hashOfConfig":"46"},{"size":644,"mtime":1655442434315,"results":"82","hashOfConfig":"46"},{"size":5507,"mtime":1655442434315,"results":"83","hashOfConfig":"46"},{"size":683,"mtime":1655442434315,"results":"84","hashOfConfig":"46"},{"size":3795,"mtime":1655442434283,"results":"85","hashOfConfig":"46"},{"size":1037,"mtime":1655442434283,"results":"86","hashOfConfig":"46"},{"size":1272,"mtime":1655442434283,"results":"87","hashOfConfig":"46"},{"size":1174,"mtime":1655442434323,"results":"88","hashOfConfig":"46"},{"size":3364,"mtime":1655457436991,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"1sizar7",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\404.tsx",["247"],[],"import Image from 'next/image'\r\nimport React from 'react'\r\nimport { Button, Guest } from '../components'\r\nimport style from '../styles/CustomPage.module.css'\r\n\r\nconst Custom404 = () => {\r\n    return (\r\n        <Guest>\r\n            <div className={style.page}>\r\n                <div className={style.wraper}>\r\n                    <div className={style.img}>\r\n                        <Image src=\"/images/Humaaans 1 Character.svg\" layout=\"fill\" />\r\n                        <div className={style.text}>404</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={style.title}>Oopss...</div>\r\n                        <div className={style.subtitle}>Page not Found</div>\r\n                    </div>\r\n                    <Button color=\"btnPrimary\" size=\"btnBig\" text='Back' />\r\n                </div>\r\n            </div>\r\n        </Guest>\r\n    )\r\n}\r\n\r\nexport default Custom404","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\change-password.tsx",["248"],[],"import Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport { Button, Guest, Input } from '../../components'\r\nimport Form from '../../components/Forms/Form'\r\nimport style from '../../styles/Auth.module.css'\r\n\r\ntype Props = {}\r\n\r\nconst ChangePassword: React.FC<Props> = (props) => {\r\n    return (\r\n        <Guest>\r\n            <div className={style.forgotPassword}>\r\n                <div className={style.forgotPasswordWrapper}>\r\n                    <div className={style.img}>\r\n                        <Image src=\"/images/Currency Crush Lock 1.svg\" layout='fill' />\r\n                    </div>\r\n                    <div className=\"text\">\r\n                        <h1 className='title'>Set your new password</h1>\r\n                        <p className='subtitle'>Your password must be different from your previously used password</p>\r\n                    </div>\r\n                    <form action=\"\" className={style.forgotPasswordForm}>\r\n                        <Input onChange={() => null} label='Password' type='password' name='password' placeholder='Password' />\r\n                        <Input onChange={() => null} label='Password Confirmation' type='password' name='password_confirmation' placeholder='Password Confirmation' />\r\n                        <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Reset Password\" />\r\n                    </form>\r\n                    <Link href=\"/auth/signin\"><a>Back to Login</a></Link>\r\n                </div>\r\n            </div>\r\n        </Guest>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\forgot-password.tsx",["249"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport React, { FormEvent, useReducer } from \"react\";\r\nimport { Button, Guest, Input } from \"../../components\";\r\nimport ErrorMsg from \"../../components/Forms/ErrorMsg\";\r\nimport { ForgotPasswordReducer } from \"../../reducer\";\r\nimport { authService } from \"../../services\";\r\nimport style from \"../../styles/Auth.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst ForgotPassword: React.FC<Props> = (props) => {\r\n  // const [state, dispatch] = useReducer(ForgotPasswordReducer, {\r\n  //   isSubmitted: false,\r\n  //   sending: false,\r\n  //   inputs: {\r\n  //     email: \"\",\r\n  //   },\r\n  // });\r\n\r\n  // const { isSubmitted, inputs, sending } = state;\r\n  // const { email } = inputs;\r\n  // const forgotPassword = () => {\r\n  //   dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n  //   if (!email) return;\r\n\r\n  //   authService\r\n  //     .forgotPassword(inputs)\r\n  //     .then((resp) => {\r\n  //       dispatch({ name: \"SET_SENDING\", payload: true });\r\n  //       console.log(resp);\r\n  //       Router.push(\"/auth/resend-email\");\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     })\r\n  //     .finally(() => dispatch({ name: \"SET_SENDING\", payload: false }));\r\n  // };\r\n  // const handleSubmit = (e: FormEvent) => {\r\n  //   e.preventDefault();\r\n  //   forgotPassword();\r\n  // };\r\n  return (\r\n    <Guest>\r\n      <div className={style.forgotPassword}>\r\n        <div className={style.forgotPasswordWrapper}>\r\n          <div className={style.img}>\r\n            <Image src=\"/images/Currency Crush Security.svg\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.forgotPasswordText}>\r\n            <h1 className={style.forgotPasswordTitle}>Forgot your password?</h1>\r\n            <p className={style.forgotPasswordSubtitle}>\r\n              No worries, we’ll send you reset instruction\r\n            </p>\r\n          </div>\r\n          <form\r\n            // onSubmit={(e) => handleSubmit(e)}\r\n            className={style.forgotPasswordForm}\r\n          >\r\n            <Input\r\n              // onChange={(event) =>\r\n              //   dispatch({\r\n              //     name: \"SET_INPUTS\",\r\n              //     payload: {\r\n              //       email: (event.target as HTMLInputElement).value,\r\n              //     },\r\n              //   })\r\n              // }\r\n              onChange={(event) => null}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email\"\r\n              value={null}\r\n              required={false}\r\n            />\r\n            <ErrorMsg\r\n              name=\"Email\"\r\n              value={\"strig\"}\r\n              isEmpty={!null}\r\n              isSubmitted={false}\r\n            />\r\n            <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Send me an email\" />\r\n          </form>\r\n          <Link href=\"/auth/signin\">\r\n            <a>Back to Login</a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Guest>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\resend-email.tsx",["250"],[],"import Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport { Button, Guest } from '../../components'\r\nimport style from '../../styles/Auth.module.css'\r\n\r\ntype Props = {}\r\n\r\nconst ResendEmail: React.FC<Props> = (props) => {\r\n    return (\r\n        <Guest>\r\n            <div className={style.forgotPassword}>\r\n                <div className={style.forgotPasswordWrapper}>\r\n                    <div className={style.img}>\r\n                        <Image src=\"/images/Currency Crush Password.svg\" layout='fill' />\r\n                    </div>\r\n                    <div className=\"text\">\r\n                        <h1 className=\"title\">Please Check Your Email</h1>\r\n                        <p className=\"subtitle\">We already send you a link to reset your password at youremail@gmail.com</p>\r\n                        <p className=\"subtitle\">Didn&apos;t receive an email?</p>\r\n                    </div>\r\n                    <form action=\"/\" className={style.forgotPasswordForm}>\r\n                        <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Resend email\" />\r\n                    </form>\r\n                    <Link href=\"/auth/forgot-password\"><a>Want changes email?</a></Link>\r\n                </div>\r\n            </div>\r\n        </Guest>\r\n    )\r\n}\r\n\r\nexport default ResendEmail","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signin.tsx",["251"],[],"import axios from \"axios\";\r\nimport { redirect } from \"next/dist/server/api-utils\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport React, { FormEvent, useReducer, useState } from \"react\";\r\nimport { Button, Input, Modal } from \"../../components\";\r\nimport ErrorMsg from \"../../components/Forms/ErrorMsg\";\r\nimport Guest from \"../../components/Layouts/Guest\";\r\nimport { LoginReducer } from \"../../reducer\";\r\nimport { authService, storageService } from \"../../services\";\r\n\r\nimport style from \"../../styles/Auth.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst Signin: React.FC<Props> = (props) => {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [state, dispatch] = useReducer(LoginReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    error: {\r\n      statusCode: 0,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const { isSubmitted, inputs, sending } = state;\r\n  const { email, password } = inputs;\r\n\r\n  const login = () => {\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (!email && !password) return;\r\n\r\n    authService\r\n      .login(inputs)\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        storageService.setToken(resp.data.data.token);\r\n        // window.location.replace(\"/dashboard\");\r\n        Router.push(\"/toko\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // dispatch({\r\n        //   name: \"SET_ERROR\",\r\n        //   payload: {\r\n        //     statusCode: error,\r\n        //     message: error,\r\n        //   },\r\n        // });\r\n      })\r\n      .finally(() => dispatch({ name: \"SET_SENDING\", payload: false }));\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n\r\n  const google = () => {\r\n    authService.google().then((resp) => Router.push(\"/toko\"));\r\n  };\r\n  return (\r\n    <Guest>\r\n      <div className=\"flex-row-center\">\r\n        <div className={style.banner}>\r\n          <div className={style.header}>\r\n            <h1 className={style.title}>Welcome Back </h1>\r\n            <p className={style.subtitle}>\r\n              Check your dashboard of your store and manage stock of the product\r\n            </p>\r\n          </div>\r\n          <div className={style.img}>\r\n            <Image src=\"/images/signIlustration1.svg\" layout=\"fill\" />\r\n          </div>\r\n        </div>\r\n        <div className={style.signForm}>\r\n          <div className={style.wrapper}>\r\n            <div className={style.text}>\r\n              <h1 className={style.title}>SIGN IN</h1>\r\n              <h1 className={style.subtitle}>\r\n                Didn’t have an account yet?{\" \"}\r\n                <Link href=\"/auth/signup\">\r\n                  <a>Register here.</a>\r\n                </Link>\r\n              </h1>\r\n            </div>\r\n            <form className={style.form} onSubmit={(e) => handleSubmit(e)}>\r\n              <span style={{ color: \"red\" }}>{state.error.message}</span>\r\n\r\n              <Input\r\n                value={state.inputs.email}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                label=\"Email\"\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      email: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                isSubmitted={isSubmitted}\r\n                value={email}\r\n                isEmpty={!email}\r\n                name=\"Email\"\r\n                min={4}\r\n              />\r\n              <Input\r\n                value={state.inputs.password}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                label=\"Password\"\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      password: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                isSubmitted={isSubmitted}\r\n                value={password}\r\n                isEmpty={!password}\r\n                name=\"Password\"\r\n                min={4}\r\n                max={12}\r\n              />\r\n              <Link href=\"/auth/forgot-password\">\r\n                <a className={style.forgotPasswordLink}>Forgot Password?</a>\r\n              </Link>\r\n            </form>\r\n            <Button\r\n              color=\"btnPrimary\"\r\n              size=\"btnBig\"\r\n              text=\"Login\"\r\n              disabled={sending}\r\n              onClick={(e) => handleSubmit(e)}\r\n            />\r\n            <div className={style.stroke}>\r\n              <span>Or</span>\r\n            </div>\r\n            <Button\r\n              onClick={() => google()}\r\n              color=\"btnInverse\"\r\n              size=\"btnMedium\"\r\n              text=\"Sign Up With Google\"\r\n              icon=\"/icons/google.svg\"\r\n            />\r\n            <Link href={\"http://api-dev.inposery.com/api/v1/auth/google\"}>\r\n              <a target=\"_blank\">google</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Guest>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signup.tsx",["252"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport React, { FormEvent, useReducer } from \"react\";\r\nimport { Button, Guest, Input } from \"../../components\";\r\nimport ErrorMsg from \"../../components/Forms/ErrorMsg\";\r\nimport { RegisterReducer } from \"../../reducer\";\r\nimport { authService } from \"../../services\";\r\nimport style from \"../../styles/Auth.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst Signup: React.FC<Props> = (props) => {\r\n  //   const e = process.env.NEXT_PUBLIC_MAINTENANCE;\r\n\r\n  const [state, dispatch] = useReducer(RegisterReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      phone: \"\",\r\n    },\r\n  });\r\n\r\n  const { isSubmitted, inputs } = state;\r\n  const { name, email, password, passwordConfirm, phone } = inputs;\r\n\r\n  const register = () => {\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (!name && !email && !password && !phone) return;\r\n    dispatch({ name: \"SET_SENDING\", payload: false });\r\n\r\n    authService\r\n      .register(inputs)\r\n      .then((resp) => {\r\n        window.location.replace(\"/auth/signin\");\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n      .finally(() => dispatch({ name: \"SET_SENDING\", payload: false }));\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    register();\r\n  };\r\n\r\n  return (\r\n    <Guest>\r\n      <div className=\"flex-row-center\">\r\n        <div className={style.banner}>\r\n          <div className={style.header}>\r\n            <h1 className={style.title}>Lets Get Started For Free </h1>\r\n            <p className={style.subtitle}>Gets your 14 Days Free Trial</p>\r\n          </div>\r\n          <div className={style.img}>\r\n            <Image src=\"/images/signIlustration.svg\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.footer}>\r\n            Sistem POS dan manajemen Inventori terbaik untuk Toko anda\r\n          </div>\r\n        </div>\r\n        <div className={style.signForm}>\r\n          <div className={style.wrapper}>\r\n            <div className={style.text}>\r\n              <h1 className={style.title}>SIGN UP</h1>\r\n              <h1 className={style.subtitle}>\r\n                Already have an account?{\" \"}\r\n                <Link href=\"/auth/signin\">\r\n                  <a>Login here.</a>\r\n                </Link>\r\n              </h1>\r\n            </div>\r\n\r\n            <form className={style.form} onSubmit={(e) => handleSubmit(e)}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                label=\"Name\"\r\n                value={state.inputs.name}\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      name: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                name=\"Name\"\r\n                value={name}\r\n                isEmpty={!name}\r\n                isSubmitted={isSubmitted}\r\n              />\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                label=\"Email\"\r\n                value={state.inputs.email}\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      email: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                name=\"Email\"\r\n                value={email}\r\n                isEmpty={!email}\r\n                isSubmitted={isSubmitted}\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                label=\"Password\"\r\n                value={state.inputs.password}\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      password: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                name=\"Password\"\r\n                value={password}\r\n                isEmpty={!password}\r\n                isSubmitted={isSubmitted}\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                placeholder=\"Password Confirm\"\r\n                label=\"Password Confirm\"\r\n                value={state.inputs.passwordConfirm}\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      passwordConfirm: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                name=\"Password\"\r\n                value={password}\r\n                isEmpty={!password}\r\n                isSubmitted={isSubmitted}\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"Phone Number\"\r\n                label=\"Phone Number\"\r\n                value={state.inputs.phone}\r\n                required={true}\r\n                onChange={(event) =>\r\n                  dispatch({\r\n                    name: \"SET_INPUTS\",\r\n                    payload: {\r\n                      phone: (event.target as HTMLInputElement).value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n              <ErrorMsg\r\n                name=\"Phone Number\"\r\n                value={phone}\r\n                isEmpty={!phone}\r\n                isSubmitted={isSubmitted}\r\n              />\r\n              <br />\r\n              <Button\r\n                color=\"btnPrimary\"\r\n                size=\"btnBig\"\r\n                text=\"Create Your Account\"\r\n              />\r\n              <div className={style.stroke}>\r\n                <span>Or</span>\r\n              </div>\r\n              <Button\r\n                color=\"btnInverse\"\r\n                text=\"Sign Up With Google\"\r\n                icon=\"/icons/google.svg\"\r\n                size=\"btnBig\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Guest>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\index.tsx",["253","254","255","256","257","258","259","260","261"],[],"import type { NextPage } from 'next'\r\nimport Head from 'next/head'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport { Card, Dropdown, Layout, PlanCard, Ratings, ReviewCard } from '../components'\r\nimport style from \"../styles/LandingPage.module.css\";\r\n\r\nconst Home: NextPage = () => {\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Imposery</title>\r\n        <meta name=\"description\" content=\"Inposery Landing Page\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      <Layout>\r\n        <header className={style.header}>\r\n          <div className=\"container flex-row-center\">\r\n            <div className={style.headerText}>\r\n              <h1 className={style.title}>Manage Your <span className=\"text-blue-primer\">Store Sales</span> and <span className=\"text-blue-primer\">Revenue</span> Easily</h1>\r\n              <p className={style.subtitle}>We offer the convenience of your POS System. with various mainstay features such as calculating daily sales, setting roles, inventory management, daily, monthly, weekly transactions in your store.</p>\r\n              <button className=\"btn-big btn-link mx-auto\">GET STARTED</button>\r\n              <Link href=\"\"><a>Subscribe from IDR 80k/month</a></Link>\r\n            </div>\r\n            <div className={style.headerArt}>\r\n              <Image src=\"/images/ilustration.svg\" layout='fill' />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <section className={`${style.feature} relative`}>\r\n          <img src=\"/images/Eclipse.svg\" alt=\"Eclipse\" className={`${style.eclipse} ${style.eclipse1}`} />\r\n          <img src=\"/images/Eclipse.svg\" alt=\"Eclipse\" className={`${style.eclipse} ${style.eclipse2}`} />\r\n          <div className=\"container\">\r\n            <h1 className={style.featureTitle}>WE PROVIDE YOU<span className={`${style.longbox} mx-auto`}></span></h1>\r\n            <p className={style.featureSubtitle}>Some of the features that we provide to your store, to support ease of transactions and calculation of your sales</p>\r\n            <div className={style.featureGrid}>\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n              <Card icon=\"/icons/facebook.svg\" title=\"Daily Transaction\" subtitle=\"View daily transaction information.\" />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.benefits}>\r\n          <div className=\"container flex-row-center justify-strecth\">\r\n            <img src=\"/images/ilustration2.svg\" alt=\"Ilustration 2\" className={style.ilustration2} />\r\n            <div className={style.benefitsCard}>\r\n              <h1>Busines Advantage Using</h1>\r\n              <h1 className='text-blue-primer'>POS System</h1>\r\n              <ul>\r\n                <li>Regular business finance management.</li>\r\n                <li>Information about sales/profit is more systematic.</li>\r\n                <li>Organized business financial management</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.faq}>\r\n          <div className=\"container flex-row-center justify-between\">\r\n            <div className={style.faqWrapper}>\r\n              <h1 className={style.faqTitle}>Frequently Ask Question (F.A.Q)</h1>\r\n              <ul className={style.faqUl}>\r\n                <Dropdown question='How long can I use the free trial available?' answer='Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!' />\r\n                <Dropdown question='Can I upload anything I want on there?' answer='Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto! ' />\r\n                <Dropdown question='How many shops can I create in once' answer='Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!' />\r\n                <Dropdown question='How many shops can I create in once' answer='Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!' />\r\n              </ul>\r\n            </div>\r\n            <div className={style.ilustration3}>\r\n              <Image src=\"/images/ilustration3.svg\" alt=\"Ilustration 3\" layout='fill' />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.plans}>\r\n          <div className=\"container\">\r\n            <h1 className={style.plansTitle}>15 - days free trial.</h1>\r\n            <p className={style.plansSubtitle}>Try Our POS System for free</p>\r\n            <div className={style.plansWraper}>\r\n              <PlanCard />\r\n              <PlanCard recomend={true} />\r\n              <PlanCard />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.review}>\r\n          <img src=\"/images/Eclipse.svg\" alt=\"Eclipse\" className={`${style.eclipse} ${style.eclipse1}`} />\r\n          <img src=\"/images/Eclipse.svg\" alt=\"Eclipse\" className={`${style.eclipse} ${style.eclipse2}`} />\r\n          <div className={style.reviewText}>\r\n            <h1 className={style.reviewTitle}>What Our <span>Customer Are Saying</span></h1>\r\n            <p className={style.reviewSubtitle}>Our customer love it about POS system to engage their bussiness\r\n              and help them to get efficiency when calculate their revenue</p>\r\n          </div>\r\n          <div className={style.reviewWraper}>\r\n            <ReviewCard img='/images/avatar.png' reviewer='Jhony Deep' job='Cofee shop owner' rating={5} text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\" />\r\n            <ReviewCard img='/images/avatar.png' reviewer='Jhony Deep' job='Cofee shop owner' rating={5} text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\" />\r\n            <ReviewCard img='/images/avatar.png' reviewer='Jhony Deep' job='Cofee shop owner' rating={5} text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\" />\r\n            <ReviewCard img='/images/avatar.png' reviewer='Jhony Deep' job='Cofee shop owner' rating={5} text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\" />\r\n            <ReviewCard img='/images/avatar.png' reviewer='Jhony Deep' job='Cofee shop owner' rating={5} text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\" />\r\n          </div>\r\n          {/* <div className=\"review-control\">\r\n          <img src=\"/icons/BigRightArrowDead.svg\" alt=\"Left Arrow\" className='prev'/>\r\n          <img src=\"/icons/BigRightArrow.svg\" alt=\"Right Arrow\" className='next'/>\r\n        </div> */}\r\n        </section>\r\n        <section className={style.mobile}>\r\n          <div className=\"container\">\r\n            <div className={style.mobileWraper}>\r\n              <h1 className={style.mobileTitle}>Manage your Transactions through the <span>Mobile application </span>and view the Dashboard through the <span>Website</span></h1>\r\n              <p className={style.mobileSubtitle}>Download the app to manage your projects, keep track of the progress and complete tasks without procastinating. Stay on track and complete on time!</p>\r\n            </div>\r\n          </div>\r\n          <img src=\"/images/PhoneMockup.png\" alt=\"Mobile\" className={style.mobileImg1} />\r\n          <img src=\"/images/PhoneMockup.png\" alt=\"Mobile\" className={style.mobileImg2} />\r\n        </section>\r\n        <section className={style.prefooter}>\r\n          <div className=\"container\">\r\n            <img src=\"/icons/InPOSery.svg\" alt=\"Logo\" />\r\n            <div className={style.prefooterText}>\r\n              <p>Download Now</p>\r\n              <p>License</p>\r\n            </div>\r\n            <div className={style.prefooterNav}>\r\n              <Link href=\"/\"><a className={style.preefooterNavItem}>Home</a></Link>\r\n              <Link href=\"\"><a className={style.preefooterNavItem}>Feature</a></Link>\r\n              <Link href=\"\"><a className={style.preefooterNavItem}>Review</a></Link>\r\n              <Link href=\"\"><a className={style.preefooterNavItem}>Pricing</a></Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\maintenance.tsx",["262"],[],"import Image from 'next/image'\r\nimport React from 'react'\r\nimport { Button, Guest } from '../components'\r\nimport style from '../styles/CustomPage.module.css'\r\n\r\nconst Maintenance = () => {\r\n    return (\r\n        <Guest>\r\n            <div className={style.page}>\r\n                <div className={style.wraper}>\r\n                    <div className={style.img}>\r\n                        <Image src=\"/images/Humaaans 1 Character.svg\" layout=\"fill\" />\r\n                    </div>\r\n                    <div>\r\n                        <div className={style.title}>Under Maintence</div>\r\n                        <div className={style.subtitle}>The pages you currently want is undermaintence and we will back soon</div>\r\n                    </div>\r\n                    <Button color=\"btnPrimary\" size=\"btnBig\" text='Back' />\r\n                </div>\r\n            </div>\r\n        </Guest>\r\n    )\r\n}\r\n\r\nexport default Maintenance","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\test.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_app.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_document.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\Button.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\Card.tsx",["263","264"],[],"import React from 'react'\r\nimport style from '../../styles/Cards.module.css'\r\n\r\ntype Props = {\r\n  icon: string,\r\n  title: string,\r\n  subtitle: string\r\n}\r\n\r\nconst Card: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <div className={style.card}>\r\n        <img src={props.icon} className={style.cardIcon} />\r\n        <h1 className={style.cardTitle}>{props.title}</h1>\r\n        <p className={style.cardSubtitle}>{props.subtitle}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\PlanCard.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\ReviewCard.tsx",["265"],[],"import Image from \"next/image\";\r\nimport React from \"react\";\r\nimport { Ratings } from \"..\";\r\nimport style from \"../../styles/Cards.module.css\";\r\n\r\ntype Props = {\r\n  reviewer: string;\r\n  job: string;\r\n  rating: number;\r\n  text: string;\r\n  img: string;\r\n};\r\n\r\nconst ReviewCard: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <div className={style.reviewCard}>\r\n        <div className={style.reviewImg}>\r\n          <Image src={props.img} layout=\"fill\" objectFit=\"cover\" />\r\n        </div>\r\n        <div className={style.reviewer}>{props.reviewer}</div>\r\n        <div className=\"flex-row-center justify-between\">\r\n          <div className={style.reviewerJob}>{props.job}</div>\r\n          <Ratings disable={true} ratings={props.rating} />\r\n        </div>\r\n        <div className={style.reviewerText}>{props.text}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\StoreCard.tsx",["266","267","268"],[],"import Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport React from \"react\";\r\nimport { storeDestroy } from \"../../services/store.service\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\n\r\ntype Props = {\r\n  id: number;\r\n  link: string;\r\n  name: string;\r\n  address: string;\r\n};\r\n\r\nconst StoreCard: React.FC<Props> = (props) => {\r\n  const handleDelete = async () => {\r\n    await storeDestroy(props.id);\r\n    Router.reload();\r\n  };\r\n  return (\r\n    <div className={style.card}>\r\n      <div className={style.cardOption}>\r\n        <img src=\"/icons/titik3.svg\" alt=\"\" />\r\n        <div className={style.cardOptionItem}>\r\n          <button onClick={() => handleDelete()}>Hapus {props.id}</button>\r\n        </div>\r\n      </div>\r\n      <img src=\"/icons/home.svg\" className={style.cardIcon}></img>\r\n      <Link href={props.link}>\r\n        <a>\r\n          <h1 className={style.cardTitle}>{props.name}</h1>\r\n        </a>\r\n      </Link>\r\n      <p className={style.cardSubitle}>{props.address}</p>\r\n      <div className={style.cardProgress}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreCard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Dropdown.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Footers\\Footer.tsx",["269","270","271","272","273","274"],[],"import Link from 'next/link'\r\nimport React from 'react'\r\nimport style from \"../../styles/Footer.module.css\";\r\n\r\ntype Props = {}\r\n\r\nconst Footer: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <footer className={style.footer}>\r\n        <div className=\"container relative\">\r\n          <p className={style.footerText}>© 2021 Inposery. All rights reserved</p>\r\n          <div className={style.footerSosmed}>\r\n            <Link href=\"\"><img src=\"/icons/facebook.svg\" alt=\"Facebook\" /></Link>\r\n            <Link href=\"\"><img src=\"/icons/twitter.svg\" alt=\"Tweeter\" /></Link>\r\n            <Link href=\"\"><img src=\"/icons/instagram.svg\" alt=\"Instagram\" /></Link>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Form.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Input.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\index.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Dashboard.tsx",["275","276","277","278"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\nimport { userService } from \"../../services\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport Notification from \"../Navigations/Notification\";\r\n\r\ntype Props = {};\r\n\r\nconst Dashboard: React.FC<Props> = (props) => {\r\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className={style.nav}>\r\n        <div className={style.start}>\r\n          <div className={style.diamonds}>\r\n            <Image src=\"/icons/diamonds.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.logo}>\r\n            <Image src=\"/icons/InPOSery.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n        </div>\r\n        <div className={style.end}>\r\n          <div className={style.notif}>\r\n            <Image\r\n              src=\"/icons/bell.svg\"\r\n              alt=\"logo\"\r\n              layout=\"fill\"\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            />\r\n            <Notification visible={isOpen} />\r\n          </div>\r\n          <div className={style.profile}></div>\r\n        </div>\r\n      </nav>\r\n      <div className={style.sidebar}>\r\n        <div className={style.sidebarTop}>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/home.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/ntah.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/fileSetting.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className={style.sidebarBottom}>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/questionCircle.svg\" alt=\"\" />\r\n              F.A.Q\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <main className={style.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Guest.tsx",["279","280"],[],"import Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst Guest: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <Link href={\"/\"}>\r\n        <img src=\"/icons/InPOSery.svg\" alt=\"guestLogo\" className=\"guestLogo\" />\r\n      </Link>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Guest;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Layout.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modal.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Modal.tsx",["281"],[],"import React, { useState } from \"react\";\r\nimport style from \"../../styles/Modal.module.css\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  children?: React.ReactNode;\r\n  title: React.ReactNode;\r\n  onOK: () => void;\r\n  onCancel: () => void;\r\n  onBack: () => void;\r\n  okText?: React.ReactNode;\r\n  cancelText?: React.ReactNode;\r\n  okButtonProps?: React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  >;\r\n  cancelButtonProps?: React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  >;\r\n};\r\n\r\nconst Modal: React.FC<Props> = (props) => {\r\n  // const [isOpen, setIsOpen] = useState<boolean>(props.visible || false);\r\n  if (!props.visible) return <></>;\r\n  else\r\n    return (\r\n      <div className={style.modalContainer}>\r\n        <div className={style.modalCentered}>\r\n          <div className={style.modal}>\r\n            <div className={style.modalHeader}>\r\n              <button\r\n                className={style.modalBackButton}\r\n                onClick={() => props.onBack()}\r\n              >\r\n                <img\r\n                  src=\"/icons/backButton.svg\"\r\n                  alt=\"\"\r\n                  width={20}\r\n                  height={20}\r\n                />\r\n              </button>\r\n              <h2 className={style.modalTitle}>\r\n                {props.title ? props.title : \"Title\"}\r\n              </h2>\r\n              <button\r\n                className={style.modalActionClose}\r\n                onClick={() => props.onCancel()}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n            <div className={style.modalBody}>{props.children}</div>\r\n            <div className={style.modalFooter}>\r\n              <button\r\n                {...props.cancelButtonProps}\r\n                onClick={() => props.onCancel()}\r\n              >\r\n                {props.cancelText ? props.cancelText : \"Tutup\"}\r\n              </button>\r\n              <button {...props.okButtonProps} onClick={() => props.onOK()}>\r\n                {props.okText ? props.okText : \"OK\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Navigation.tsx",["282"],[],"import Link from 'next/link'\r\nimport React from 'react'\r\nimport style from '../../styles/Navigation.module.css'\r\n\r\ntype Props = {}\r\n\r\nconst Navigation: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <nav className={style.nav}>\r\n        <div className=\"container flex-row-center justify-between\">\r\n          <img src=\"/icons/InPOSery.svg\" alt=\"logo\" className='logo' />\r\n          <div className={style.navLinks}>\r\n            <Link href=\"\"><a className={style.navItem}>Home</a></Link>\r\n            <Link href=\"\"><a className={style.navItem}>Feature</a></Link>\r\n            <Link href=\"\"><a className={style.navItem}>Review</a></Link>\r\n            <Link href=\"\"><a className={style.navItem}>Pricing</a></Link>\r\n          </div>\r\n          <Link href=\"/auth/signin\"><a className='btn btn-link'>Masuk</a></Link>`\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navigation","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingDisplay.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingIcon.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\Ratings.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\StarIcon.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\ErrorMsg.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\403.tsx",["283"],[],"import Image from \"next/image\";\r\nimport React from \"react\";\r\nimport { Button, Guest } from \"../components\";\r\nimport style from \"../styles/CustomPage.module.css\";\r\n\r\nconst Custom404 = () => {\r\n  return (\r\n    <Guest>\r\n      <div className={style.page}>\r\n        <div className={style.wraper}>\r\n          <div className={style.img}>\r\n            <Image src=\"/images/Humaaans 1 Character.svg\" layout=\"fill\" />\r\n            <div className={style.text}>403</div>\r\n          </div>\r\n          <div>\r\n            <div className={style.title}>Oopss...</div>\r\n            <div className={style.subtitle}>Unauthorized</div>\r\n          </div>\r\n          <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Back\" />\r\n        </div>\r\n      </div>\r\n    </Guest>\r\n  );\r\n};\r\n\r\nexport default Custom404;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\index.tsx",["284","285"],[],"import Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport React, { FormEvent, useEffect, useReducer, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Dashboard,\r\n  Input,\r\n  StoreCard,\r\n  PlanCard,\r\n  ModalEmpty,\r\n} from \"../../components\";\r\nimport ErrorMsg from \"../../components/Forms/ErrorMsg\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport { StoreReducer } from \"../../reducer\";\r\nimport { stores, storesCreate } from \"../../services/store.service\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport { Store } from \"../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Index: React.FC<Props> = (props) => {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [state, dispatch] = useReducer(StoreReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      name: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n    },\r\n    error: {\r\n      statusCode: 0,\r\n      message: \"\",\r\n    },\r\n  });\r\n  const { isSubmitted, inputs, sending } = state;\r\n  const { name, phone, address } = inputs;\r\n  const store = () => {\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (!name && !phone && !address) return;\r\n\r\n    storesCreate(inputs)\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        console.log(resp);\r\n        Router.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        dispatch({\r\n          name: \"SET_ERROR\",\r\n          payload: {\r\n            statusCode: error,\r\n            message: error,\r\n          },\r\n        });\r\n      })\r\n      .finally(() => dispatch({ name: \"SET_SENDING\", payload: false }));\r\n  };\r\n  const [toko, setToko] = useState<Store[]>([]);\r\n  const [error, setError] = useState();\r\n  const bayar = true;\r\n  console.log(error);\r\n  const hanldeSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    store();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      console.log(\"we are running on the client\");\r\n      console.log(localStorage.getItem(\"TOKEN\"));\r\n      stores()\r\n        .then((res) => {\r\n          setToko(res.data.data);\r\n          console.log(toko);\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n          console.log(err.message);\r\n        });\r\n    } else {\r\n      console.log(\"we are running on the server\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Dashboard>\r\n      <header className={style.header}>\r\n        <h1 className={style.headerTitle}>Your Store</h1>\r\n        <form className={style.headerSearch}>\r\n          {/* <img src=\"/icons/search.svg\" alt=\"\" /> */}\r\n          <Input\r\n            name=\"search\"\r\n            onChange={() => null}\r\n            type=\"text\"\r\n            placeholder=\"Search your store ...\"\r\n          />\r\n        </form>\r\n        <Button\r\n          color=\"btnPrimary\"\r\n          text=\"+ Create New Store\"\r\n          onClick={() => setShowModal(true)}\r\n          size=\"big\"\r\n        />\r\n      </header>\r\n\r\n      {toko[0] != null ? (\r\n        <div className={style.mainContent}>\r\n          {toko.map((key) => (\r\n            <StoreCard\r\n              key={key.id}\r\n              link={`toko/${key.id}`}\r\n              id={key.id}\r\n              name={key.name}\r\n              address={key.address}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className={style.emptyStore}>\r\n          <img src=\"/images/ilustration4.svg\" alt=\"\" />\r\n          <h2>Kamu belum memiliki toko.</h2>\r\n        </div>\r\n      )}\r\n      <ModalEmpty\r\n        visible={showModal}\r\n        title=\"Create Toko\"\r\n        onOK={() => null}\r\n        onCancel={() => setShowModal(false)}\r\n        footer={null}\r\n        // onBack={() => null}\r\n      >\r\n        {bayar ? (\r\n          <form className=\"tokoForm\" onSubmit={(e) => hanldeSubmit(e)}>\r\n            <div className=\"formHeader\">\r\n              <h1>Buat toko anda</h1>\r\n              <p>\r\n                Buat tokomu dan undang karyawan untuk manajemen toko yang lebih\r\n                baik\r\n              </p>\r\n            </div>\r\n            <Input\r\n              name=\"name\"\r\n              placeholder=\"Nama Toko Anda\"\r\n              type=\"text\"\r\n              label=\"Nama Toko\"\r\n              onChange={(event) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    name: (event.target as HTMLInputElement).value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={name}\r\n              isEmpty={!name}\r\n              name=\"Name\"\r\n              min={4}\r\n            />\r\n            <Input\r\n              name=\"phone\"\r\n              placeholder=\"No Telp Toko Anda\"\r\n              type=\"text\"\r\n              label=\"No Telpon Toko\"\r\n              onChange={(event) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    phone: (event.target as HTMLInputElement).value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={phone}\r\n              isEmpty={!phone}\r\n              name=\"No telp\"\r\n              min={12}\r\n            />\r\n            <Input\r\n              name=\"alamat\"\r\n              placeholder=\"Alamat Toko Anda\"\r\n              type=\"text\"\r\n              label=\"Alamat Toko\"\r\n              onChange={(event) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    address: (event.target as HTMLInputElement).value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={address}\r\n              isEmpty={!address}\r\n              name=\"Address\"\r\n            />\r\n            <Input\r\n              name=\"photo\"\r\n              placeholder=\"Logo Toko Anda\"\r\n              type=\"file\"\r\n              label=\"Logo Toko\"\r\n              onChange={() => null}\r\n            />\r\n\r\n            <div className=\"formFooter\">\r\n              <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Submit\" />\r\n              <Button color=\"btnInverse\" text=\"Batal\" size=\"btnBig\" />\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <>\r\n            <h1 className=\"modalHeader\">Upgrade plan</h1>\r\n            <div className=\"modalPlan\">\r\n              <PlanCard />\r\n              <PlanCard recomend={true} />\r\n              <PlanCard />\r\n            </div>\r\n            <p>Perlu konsultasi ? Hubungi admin kami</p>\r\n            <Link href=\"\">\r\n              <a>Admin</a>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </ModalEmpty>\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\riwayat-transaksi.tsx",["286"],[],"import React, { useState } from \"react\";\r\nimport { Button, Dashboard, Input, ModalEmpty } from \"../../components\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst RiwayatTransaksi: React.FC = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const data = { price: 27000, name: \"Monthly\" };\r\n  const total = 2;\r\n  return (\r\n    <Dashboard>\r\n      <div className={style.header}>\r\n        <div className=\"text\">\r\n          <h1>Transaksi</h1>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil,\r\n            mollitia?\r\n          </p>\r\n        </div>\r\n        <form className={style.headerSearch}>\r\n          {/* <img src=\"/icons/search.svg\" alt=\"\" /> */}\r\n          <Input\r\n            name=\"search\"\r\n            onChange={() => null}\r\n            type=\"text\"\r\n            placeholder=\"Search your store ...\"\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <th>Tgl Pemesanan</th>\r\n          <th>No Pesanan</th>\r\n          <th>Plan</th>\r\n          <th>Harga</th>\r\n          <th>Quantity</th>\r\n          <th>Jumlah yang harus dibayar</th>\r\n          <th>Status</th>\r\n          <th>Aksi</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>27 April 2022</td>\r\n            <td>12RXKING76</td>\r\n            <td>Monthly</td>\r\n            <td>Rp. 27.000</td>\r\n            <td>{total}</td>\r\n            <td>Rp. 54.000</td>\r\n            <th>\r\n              <div className=\"text-danger\">Pending</div>\r\n            </th>\r\n            <td>\r\n              <div className=\"flex-row-center gap-20\">\r\n                <Button\r\n                  onClick={() => setShowModal(true)}\r\n                  text=\"Cara Bayar\"\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnSmall\"\r\n                />\r\n                <Button text=\"Batal\" color=\"btnInverse\" size=\"btnSmall\" />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <ModalEmpty\r\n        visible={showModal}\r\n        // okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n        title=\"Konfirmasi Pembayaran\"\r\n        onOK={() => null}\r\n        onCancel={() => setShowModal(false)}\r\n        footer={\r\n          <>\r\n            <Button\r\n              color=\"btnPrimary\"\r\n              size=\"btnBig\"\r\n              text=\"Konfirmasi Pesanan\"\r\n              onClick={() => null}\r\n            />\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"modalKonfirmasiPembayaran\">\r\n          {/* <button onClick={prevStep}>back</button> */}\r\n          <div className=\"circle bg-success\">\r\n            <img src=\"/icons/centang.svg\" alt=\"\" />\r\n          </div>\r\n          <h3>Pesanan 12RXKing telah diproses</h3>\r\n          <p>Total Pembayaran yang harus dibayar</p>\r\n          <div className=\"box rounded bg-gray\">\r\n            <h1>Rp.{data.price * total}</h1>\r\n          </div>\r\n          <h4>Metode Pembayaran</h4>\r\n          <p>BRI Virtual Account</p>\r\n          <h1>12731982749156924</h1>\r\n          <div className=\"box bg-gray rounded text-justify\">\r\n            <b>Note</b> silahkan melakukan pembayaran dengan melakukan <br />\r\n            transfer ke nomor rekening yang tertera. Setelah itu kirimkan <br />\r\n            bukti pembayaran pada admin dengan mengclick tombol konfirmasi{\" \"}\r\n            <br />\r\n            pembayaran.\r\n          </div>\r\n        </div>\r\n      </ModalEmpty>\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default RiwayatTransaksi;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\test.tsx",["287"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dashboard,\r\n  Modal,\r\n  ModalEmpty,\r\n  PlanCard,\r\n} from \"../../components\";\r\nimport useModal from \"../../hooks/useModal\";\r\n\r\ntype Props = {};\r\n\r\nconst Test: React.FC<Props> = (props) => {\r\n  const { open, toggler } = useModal();\r\n  const [plan, setPlan] = useState({});\r\n  const [total, setTotal] = useState(1);\r\n\r\n  const [step, setStep] = useState(1);\r\n  const prevStep = () => step > 1 && setStep(step - 1);\r\n  const nextStep = () => setStep(step + 1);\r\n  const selected = (data: object) => {\r\n    nextStep();\r\n    setPlan(data);\r\n  };\r\n  const data = { price: 27000, name: \"Monthly\" };\r\n\r\n  const payment = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <ModalEmpty\r\n            visible={showModal}\r\n            title=\"Modal\"\r\n            onOK={() => deleteSembarang()}\r\n            onCancel={() => setShowModal(false)}\r\n            footer={\r\n              <>\r\n                <div className=\"modalPlanText\">\r\n                  <p>Perlu konsultasi? Hubungi kami di </p>\r\n                  <a\r\n                    className=\"link\"\r\n                    target=\"_blank\"\r\n                    href=\" https://wa.me/081225846909?text=Saya%20ingin%20melakukan%20konsultasi%20dengan%20anda%20terkait%20plan%20pada%20web%20inposery.\"\r\n                  >\r\n                    WA 081225846909\r\n                  </a>\r\n                </div>\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPlan\">\r\n              <PlanCard onClick={() => selected(data)} />\r\n              <PlanCard onClick={() => selected(data)} recomend={true} />\r\n              <PlanCard onClick={() => selected(data)} />\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 2:\r\n        return (\r\n          <ModalEmpty\r\n            visible={showModal}\r\n            title=\"Informasi Pembayaran\"\r\n            onOK={() => deleteSembarang()}\r\n            onCancel={() => setShowModal(false)}\r\n            // onBack={prevStep}\r\n            footer={\r\n              <>\r\n                <Button\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Buat Pesanan\"\r\n                  onClick={nextStep}\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPembayaran\">\r\n              <div className=\"box rounded  bg-gray\">\r\n                <h4>Detail Pemesanan</h4>\r\n                <table>\r\n                  <thead>\r\n                    <th>Item</th>\r\n                    <th>Jumlah Item</th>\r\n                    <th>Harga</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    <td>Lorem, ipsum.</td>\r\n                    <td>\r\n                      {/* <Button\r\n                    onClick={(e) => total > 0 && setTotal(total - 1)}\r\n                    text=\"-\"\r\n                    color=\"btnPrimary\"\r\n                    size=\"sd\"\r\n                  />\r\n                  <span>{total}</span>\r\n                  <Button\r\n                    onClick={(e) => setTotal(total + 1)}\r\n                    text=\"+\"\r\n                    color=\"btnPrimary\"\r\n                    size=\"sd\"\r\n                  /> */}\r\n                      <select name=\"\" id=\"\">\r\n                        <option value=\"\">1</option>\r\n                        <option value=\"\">3</option>\r\n                        <option value=\"\">5</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>{data.price * total}</td>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <label htmlFor=\"pembayaran\">Metode Pembayaran</label>\r\n                <select name=\"pembayaran\" id=\"\">\r\n                  <option value=\"\">Transfer</option>\r\n                  <option value=\"\">COD</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <p>\r\n                  Proses konfirmasi pembayaran akan membutuhkan waktu sekitar 20{\" \"}\r\n                  <br />\r\n                  menit jika menggunakan metode pembayaran manual. Mohon\r\n                  menunggu <br />\r\n                  dengan sabar dan terima kasih.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 3:\r\n        return (\r\n          <ModalEmpty\r\n            visible={showModal}\r\n            // okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n            title=\"Konfirmasi Pembayaran\"\r\n            onOK={() => deleteSembarang()}\r\n            onCancel={() => setShowModal(false)}\r\n            footer={\r\n              <>\r\n                <Button\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Konfirmasi Pesanan\"\r\n                  onClick={nextStep}\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalKonfirmasiPembayaran\">\r\n              {/* <button onClick={prevStep}>back</button> */}\r\n              <div className=\"circle bg-success\">\r\n                <img src=\"/icons/centang.svg\" alt=\"\" />\r\n              </div>\r\n              <h3>Pesanan 12RXKing telah diproses</h3>\r\n              <p>Total Pembayaran yang harus dibayar</p>\r\n              <div className=\"box rounded bg-gray\">\r\n                <h1>Rp.{data.price * total}</h1>\r\n              </div>\r\n              <h4>Metode Pembayaran</h4>\r\n              <p>BRI Virtual Account</p>\r\n              <h1>12731982749156924</h1>\r\n              <div className=\"box bg-gray rounded text-justify\">\r\n                <b>Note</b> silahkan melakukan pembayaran dengan melakukan{\" \"}\r\n                <br />\r\n                transfer ke nomor rekening yang tertera. Setelah itu kirimkan{\" \"}\r\n                <br />\r\n                bukti pembayaran pada admin dengan mengclick tombol konfirmasi{\" \"}\r\n                <br />\r\n                pembayaran.\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n\r\n      default:\r\n        \"asd\";\r\n    }\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState<boolean>(true);\r\n  const [deleting, setDeleting] = useState<boolean>(false);\r\n  const deleteSembarang = () => {\r\n    setDeleting(true);\r\n    try {\r\n      setTimeout(() => {\r\n        setDeleting(false);\r\n        setShowModal(false);\r\n      }, 5000);\r\n    } catch (error) {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dashboard>\r\n      <button onClick={() => setShowModal(true)}>Buka</button>\r\n      {payment()}\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\index.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\inventory.tsx",["288","289","290"],[],"import Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { FormEvent, SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Table, Toko } from \"../../../components\";\r\nimport {\r\n  store,\r\n  products,\r\n  productsDestroy,\r\n} from \"../../../services/store.service\";\r\nimport style from \"../../../styles/Inventory.module.css\";\r\nimport { Product, Store, TableColumn } from \"../../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Inventory: React.FC<Props> = (props) => {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const [toko, setToko] = useState<Store>();\r\n  const [produk, setProduk] = useState<Product[]>([]);\r\n  const [produks, setProduks] = useState<Product[]>([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!router.isReady) return;\r\n    store(id)\r\n      .then((res) => {\r\n        setToko(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    products(id)\r\n      .then((res) => {\r\n        setProduk(res.data.data);\r\n        setProduks(res.data.data);\r\n        console.log(produk);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [router.isReady]);\r\n\r\n  const handleDelete = async (e: SyntheticEvent, id: any, index: number) => {\r\n    setProduks(produk.filter((v, i) => i !== index));\r\n    setProduk(produk.filter((v, i) => i !== index));\r\n    productsDestroy(id);\r\n  };\r\n\r\n  const hanldeSearch = (e: SyntheticEvent) => {\r\n    const search = (e.target as HTMLInputElement).value;\r\n    if (search == \"\") {\r\n      setProduk(produks);\r\n      return;\r\n    }\r\n    const result = produk.filter((val) =>\r\n      val.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setProduk(result);\r\n  };\r\n\r\n  const productColumn: TableColumn<Product>[] = [\r\n    {\r\n      key: \"id\",\r\n      title: \"NO\",\r\n      dataType: \"numbering\",\r\n    },\r\n    {\r\n      key: \"id\",\r\n      title: \"ID\",\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n    },\r\n    {\r\n      key: \"category\",\r\n      title: \"Category\",\r\n      render: (value) => `${value.category.name}`,\r\n    },\r\n    {\r\n      key: \"unit\",\r\n      title: \"Stock\",\r\n    },\r\n    {\r\n      key: \"price\",\r\n      title: \"Modal\",\r\n      render: (value) => `${value.price.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: \"groceryPrice\",\r\n      title: \"Modal\",\r\n      render: (value) => `${value.groceryPrice.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: \"description\",\r\n      title: \"Deskripsi\",\r\n    },\r\n  ];\r\n  return (\r\n    <Toko>\r\n      <header>\r\n        <div className={`.flex-row ${style.inventoryToko}`}>\r\n          <img src=\"/images/avatar.png\" alt=\"avatar\" />\r\n          <div className=\"flex-col\">\r\n            <h1>{toko?.name}</h1>\r\n            <p>{toko?.address}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-row-center justify-between p-2\">\r\n          <div className=\"invetoryBreadcrumb\">\r\n            <Link href={\"/\"}>Dashboard</Link> /{\" \"}\r\n            <Link href={\"/\"}>Inventory</Link>\r\n          </div>\r\n          <div className={style.inventoryFungsi}>\r\n            <button>+ Satuan</button>\r\n            <button>+ Kategori</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className={style.inventoryContent}>\r\n        <div className={style.inventoryFilter}>\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={(e) => setFilter((e.target as HTMLSelectElement).value)}\r\n          >\r\n            <option value=\"filter\">filter</option>\r\n            <option value=\"nama\">nama</option>\r\n            <option value=\"kategori\">kategori</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari produk...\"\r\n            onChange={(e) => hanldeSearch(e)}\r\n          />\r\n          <button>Tambah Produk</button>\r\n        </div>\r\n        <div className=\"x-auto\">\r\n          <Table columns={productColumn} data={produk} />\r\n          {/* <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Id Barang</th>\r\n                <th>Nama</th>\r\n                <th>Kategori</th>\r\n                <th>Stok</th>\r\n                <th>Harga</th>\r\n                <th>Modal</th>\r\n                <th>Keterangan</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            {produk && (\r\n              <tbody>\r\n                {produk.map((item, index) => (\r\n                  <tr key={item.id}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.category.name}</td>\r\n                    <td>{item.unit.toLocaleString()}</td>\r\n                    <td>Rp. {item.price.toLocaleString()}</td>\r\n                    <td>Rp. {item.groceryPrice.toLocaleString()}</td>\r\n                    <td>{item.description}</td>\r\n                    <td className={style.action}>\r\n                      <button>Edit</button>\r\n                      <button onClick={(e) => handleDelete(e, item.id, index)}>\r\n                        Hapus\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            )}\r\n          </table> */}\r\n        </div>\r\n        {!produk && (\r\n          <div className={style.emptyInventory}>\r\n            <img src=\"/images/produkKosong.svg\" alt=\"\" />\r\n            <h4 className=\"text-primary\">Belum ada produk</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Toko>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk\\[pid].tsx",["291"],[],"import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { product } from \"../../../../services/store.service\";\r\n\r\ntype Props = {};\r\n\r\nconst Single: React.FC<Props> = (props) => {\r\n  const router = useRouter();\r\n  const pid = router.query.pid;\r\n  const [produk, setProduk] = useState([]);\r\n  useEffect(() => {\r\n    if (!router.isReady) return;\r\n    product(pid)\r\n      .then((res) => {\r\n        setProduk(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [router.isReady]);\r\n\r\n  return (\r\n    <div>\r\n      Single {pid} {JSON.stringify(produk)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Single;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Toko.tsx",["292","293","294","295","296","297","298"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport Notification from \"../Navigations/Notification\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport { useRouter } from \"next/router\";\r\n\r\ntype Props = {};\r\n\r\nconst Toko: React.FC<Props> = (props) => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  console.log(router.pathname);\r\n  console.log(router.query);\r\n  console.log(router.asPath);\r\n  return (\r\n    <>\r\n      <nav className={style.nav}>\r\n        <div className={style.start}>\r\n          <div className={style.diamonds}>\r\n            <Image src=\"/icons/diamonds.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.logo}>\r\n            <Image src=\"/icons/InPOSery.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n        </div>\r\n        <div className={style.end}>\r\n          <div className={style.notif}>\r\n            <Image\r\n              src=\"/icons/bell.svg\"\r\n              alt=\"logo\"\r\n              layout=\"fill\"\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            />\r\n            <Notification visible={isOpen} />\r\n          </div>\r\n          <div className={style.profile}></div>\r\n        </div>\r\n      </nav>\r\n      <div className={style.sidebar}>\r\n        <div className={style.sidebarTop}>\r\n          <Link href={`/toko/${router.query.id}`}>\r\n            <a\r\n              className={`${\r\n                router.pathname == \"/toko/[id]\" ? style.active : \"\"\r\n              } ${style.sidebarItems}`}\r\n            >\r\n              <img src=\"/icons/dashboard.svg\" alt=\"\" />\r\n              dashboard\r\n            </a>\r\n          </Link>\r\n          <Link href={`/toko/${router.query.id}/inventory`}>\r\n            <a\r\n              className={`${\r\n                router.pathname == `/toko/[id]/inventory` ? style.active : \"\"\r\n              } ${style.sidebarItems}`}\r\n            >\r\n              <img src=\"/icons/inventory.svg\" alt=\"\" />\r\n              inventory\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? style.active : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/transaksi.svg\" alt=\"\" />\r\n              transaksi\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/laporan.svg\" alt=\"\" />\r\n              laporan\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/manajemen.svg\" alt=\"\" />\r\n              manajemen\r\n            </a>\r\n          </Link>\r\n\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/pengaturan.svg\" alt=\"\" />\r\n              pengaturan\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className={style.sidebarBottom}>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/questionCircle.svg\" alt=\"\" />\r\n              F.A.Q\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <main className={style.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toko;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\ModalEmpty.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Notification.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\table.tsx",["299"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport { products } from \"../../services/store.service\";\r\nimport { Product, TableColumn } from \"../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Tables: React.FC<Props> = (props) => {\r\n  const [product, setProduct] = useState<Array<Product>>([]);\r\n\r\n  useEffect(() => {\r\n    products(3)\r\n      .then((res) => {\r\n        setProduct(res.data.data);\r\n        console.log(product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columnPost: TableColumn<Product>[] = [\r\n    {\r\n      title: \"Nomor\",\r\n      key: \"id\",\r\n      dataType: \"numbering\",\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Nama\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n      render: (value) => (\r\n        <button onClick={() => console.log(\"id\", value.id)}>Delete</button>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Table columns={columnPost} data={product} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Table\\Table.tsx",["300"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TableProps } from \"../../types\";\r\n\r\nconst Table: React.FC<TableProps> = (props) => {\r\n  const [perPage, setPerpage] = useState<number>(10);\r\n  const [localData, setLocalData] = useState<any[][]>();\r\n  const [selectedPage, setSelectedPage] = useState<number>(0);\r\n\r\n  const initTable = () => {\r\n    console.log(\"initTable data\", props.data);\r\n    const initData = [...props.data];\r\n    const results = [];\r\n    const chunk_size = perPage;\r\n    while (initData.length > 0) {\r\n      results.push(initData.splice(0, chunk_size));\r\n    }\r\n\r\n    setLocalData(results);\r\n  };\r\n\r\n  // componentDidUpdate\r\n  useEffect(() => {\r\n    initTable();\r\n  }, [props.data, perPage]);\r\n  console.log(props.data, \"data dari props\");\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {props.columns.map((column, index) => {\r\n              return <th key={index}>{column.title}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {localData && localData[selectedPage]\r\n            ? localData[selectedPage].map((data, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    {props.columns.map((column, indexColumn) => {\r\n                      let toShown = data[column.key];\r\n                      if (column.render) toShown = column.render(data, index);\r\n                      if (column.dataType === \"numbering\") {\r\n                        toShown = selectedPage * perPage + index + 1;\r\n                      }\r\n                      return <td key={indexColumn}>{toShown}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n\r\n        <div>\r\n          <div>\r\n            {localData\r\n              ? Array(localData.length)\r\n                  .fill(0)\r\n                  .map((d, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setSelectedPage(index)}\r\n                      style={{\r\n                        color: selectedPage === index ? \"red\" : undefined,\r\n                      }}\r\n                    >\r\n                      {index + 1}\r\n                    </button>\r\n                  ))\r\n              : null}\r\n          </div>\r\n\r\n          <div>\r\n            {selectedPage >= 1 ? (\r\n              <button onClick={() => setSelectedPage((state) => state - 1)}>\r\n                Sebelumnya\r\n              </button>\r\n            ) : null}\r\n            {localData &&\r\n            localData[selectedPage] &&\r\n            selectedPage !== localData.length - 1 ? (\r\n              <button onClick={() => setSelectedPage((state) => state + 1)}>\r\n                Selanjutnya\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div>\r\n            <select\r\n              onChange={(e) => setPerpage(Number(e.target.value))}\r\n              value={perPage}\r\n              name=\"perpage\"\r\n              id=\"perpage\"\r\n            >\r\n              <option value={\"2\"}>{2}</option>\r\n              <option value={\"20\"}>{20}</option>\r\n              <option value={\"50\"}>{50}</option>\r\n              <option value={\"100\"}>{100}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n",{"ruleId":"301","severity":1,"message":"302","line":12,"column":25,"nodeType":"303","endLine":12,"endColumn":87},{"ruleId":"301","severity":1,"message":"302","line":16,"column":25,"nodeType":"303","endLine":16,"endColumn":88},{"ruleId":"301","severity":1,"message":"302","line":50,"column":13,"nodeType":"303","endLine":50,"endColumn":78},{"ruleId":"301","severity":1,"message":"302","line":15,"column":25,"nodeType":"303","endLine":15,"endColumn":90},{"ruleId":"301","severity":1,"message":"302","line":80,"column":13,"nodeType":"303","endLine":80,"endColumn":71},{"ruleId":"301","severity":1,"message":"302","line":59,"column":13,"nodeType":"303","endLine":59,"endColumn":70},{"ruleId":"301","severity":1,"message":"302","line":28,"column":15,"nodeType":"303","endLine":28,"endColumn":68},{"ruleId":"304","severity":1,"message":"305","line":33,"column":11,"nodeType":"303","endLine":33,"endColumn":107},{"ruleId":"304","severity":1,"message":"305","line":34,"column":11,"nodeType":"303","endLine":34,"endColumn":107},{"ruleId":"304","severity":1,"message":"305","line":50,"column":13,"nodeType":"303","endLine":50,"endColumn":102},{"ruleId":"304","severity":1,"message":"305","line":90,"column":11,"nodeType":"303","endLine":90,"endColumn":107},{"ruleId":"304","severity":1,"message":"305","line":91,"column":11,"nodeType":"303","endLine":91,"endColumn":107},{"ruleId":"304","severity":1,"message":"305","line":116,"column":11,"nodeType":"303","endLine":116,"endColumn":90},{"ruleId":"304","severity":1,"message":"305","line":117,"column":11,"nodeType":"303","endLine":117,"endColumn":90},{"ruleId":"304","severity":1,"message":"305","line":121,"column":13,"nodeType":"303","endLine":121,"endColumn":57},{"ruleId":"301","severity":1,"message":"302","line":12,"column":25,"nodeType":"303","endLine":12,"endColumn":87},{"ruleId":"304","severity":1,"message":"305","line":14,"column":9,"nodeType":"303","endLine":14,"endColumn":60},{"ruleId":"301","severity":1,"message":"306","line":14,"column":9,"nodeType":"303","endLine":14,"endColumn":60},{"ruleId":"301","severity":1,"message":"302","line":19,"column":11,"nodeType":"303","endLine":19,"endColumn":68},{"ruleId":"304","severity":1,"message":"305","line":22,"column":9,"nodeType":"303","endLine":22,"endColumn":47},{"ruleId":"304","severity":1,"message":"305","line":27,"column":7,"nodeType":"303","endLine":27,"endColumn":61},{"ruleId":"301","severity":1,"message":"306","line":27,"column":7,"nodeType":"303","endLine":27,"endColumn":61},{"ruleId":"307","severity":1,"message":"308","line":14,"column":13,"nodeType":"303","endLine":14,"endColumn":27},{"ruleId":"304","severity":1,"message":"305","line":14,"column":27,"nodeType":"303","endLine":14,"endColumn":75},{"ruleId":"307","severity":1,"message":"308","line":15,"column":13,"nodeType":"303","endLine":15,"endColumn":27},{"ruleId":"304","severity":1,"message":"305","line":15,"column":27,"nodeType":"303","endLine":15,"endColumn":73},{"ruleId":"307","severity":1,"message":"308","line":16,"column":13,"nodeType":"303","endLine":16,"endColumn":27},{"ruleId":"304","severity":1,"message":"305","line":16,"column":27,"nodeType":"303","endLine":16,"endColumn":77},{"ruleId":"304","severity":1,"message":"305","line":41,"column":15,"nodeType":"303","endLine":41,"endColumn":51},{"ruleId":"304","severity":1,"message":"305","line":47,"column":15,"nodeType":"303","endLine":47,"endColumn":51},{"ruleId":"304","severity":1,"message":"305","line":53,"column":15,"nodeType":"303","endLine":53,"endColumn":58},{"ruleId":"304","severity":1,"message":"305","line":61,"column":15,"nodeType":"303","endLine":61,"endColumn":61},{"ruleId":"307","severity":1,"message":"308","line":9,"column":7,"nodeType":"303","endLine":9,"endColumn":24},{"ruleId":"304","severity":1,"message":"305","line":10,"column":9,"nodeType":"303","endLine":10,"endColumn":80},{"ruleId":"304","severity":1,"message":"305","line":36,"column":17,"nodeType":"303","endLine":41,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":12,"column":11,"nodeType":"303","endLine":12,"endColumn":72},{"ruleId":"301","severity":1,"message":"302","line":12,"column":13,"nodeType":"303","endLine":12,"endColumn":75},{"ruleId":"309","severity":1,"message":"310","line":87,"column":6,"nodeType":"311","endLine":87,"endColumn":8,"suggestions":"312"},{"ruleId":"304","severity":1,"message":"305","line":124,"column":11,"nodeType":"303","endLine":124,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":88,"column":13,"nodeType":"303","endLine":88,"endColumn":52},{"ruleId":"304","severity":1,"message":"305","line":153,"column":17,"nodeType":"303","endLine":153,"endColumn":56},{"ruleId":"309","severity":1,"message":"313","line":40,"column":6,"nodeType":"311","endLine":40,"endColumn":22,"suggestions":"314"},{"ruleId":"304","severity":1,"message":"305","line":102,"column":11,"nodeType":"303","endLine":102,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":177,"column":13,"nodeType":"303","endLine":177,"endColumn":58},{"ruleId":"309","severity":1,"message":"315","line":20,"column":6,"nodeType":"311","endLine":20,"endColumn":22,"suggestions":"316"},{"ruleId":"304","severity":1,"message":"305","line":48,"column":15,"nodeType":"303","endLine":48,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":58,"column":15,"nodeType":"303","endLine":58,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":68,"column":15,"nodeType":"303","endLine":68,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":78,"column":15,"nodeType":"303","endLine":78,"endColumn":54},{"ruleId":"304","severity":1,"message":"305","line":88,"column":15,"nodeType":"303","endLine":88,"endColumn":56},{"ruleId":"304","severity":1,"message":"305","line":99,"column":15,"nodeType":"303","endLine":99,"endColumn":57},{"ruleId":"304","severity":1,"message":"305","line":111,"column":15,"nodeType":"303","endLine":111,"endColumn":61},{"ruleId":"309","severity":1,"message":"317","line":20,"column":6,"nodeType":"311","endLine":20,"endColumn":8,"suggestions":"318"},{"ruleId":"309","severity":1,"message":"319","line":24,"column":6,"nodeType":"311","endLine":24,"endColumn":27,"suggestions":"320"},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@next/next/link-passhref","passHref is missing. See: https://nextjs.org/docs/messages/link-passhref","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toko'. Either include it or remove the dependency array.","ArrayExpression",["321"],"React Hook useEffect has missing dependencies: 'id' and 'produk'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'initTable'. Either include it or remove the dependency array.",["325"],{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},"Update the dependencies array to be: [toko]",{"range":"336","text":"337"},"Update the dependencies array to be: [id, produk, router.isReady]",{"range":"338","text":"339"},"Update the dependencies array to be: [pid, router.isReady]",{"range":"340","text":"341"},"Update the dependencies array to be: [product]",{"range":"342","text":"343"},"Update the dependencies array to be: [props.data, perPage, initTable]",{"range":"344","text":"345"},[2377,2379],"[toko]",[1182,1198],"[id, produk, router.isReady]",[545,561],"[pid, router.isReady]",[555,557],"[product]",[703,724],"[props.data, perPage, initTable]"]