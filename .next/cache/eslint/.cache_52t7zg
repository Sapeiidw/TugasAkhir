[{"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\404.tsx":"1","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\change-password.tsx":"2","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\forgot-password.tsx":"3","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\resend-email.tsx":"4","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signin.tsx":"5","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signup.tsx":"6","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\index.tsx":"7","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\maintenance.tsx":"8","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\test.tsx":"9","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_app.tsx":"10","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_document.tsx":"11","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\Button.tsx":"12","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\Card.tsx":"13","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\PlanCard.tsx":"14","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\ReviewCard.tsx":"15","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\StoreCard.tsx":"16","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Dropdown.tsx":"17","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Footers\\Footer.tsx":"18","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Form.tsx":"19","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Input.tsx":"20","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\index.tsx":"21","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Dashboard.tsx":"22","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Guest.tsx":"23","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Layout.tsx":"24","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modal.tsx":"25","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Modal.tsx":"26","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Navigation.tsx":"27","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingDisplay.tsx":"28","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingIcon.tsx":"29","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\Ratings.tsx":"30","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\StarIcon.tsx":"31","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\ErrorMsg.tsx":"32","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\403.tsx":"33","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\index.tsx":"34","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\riwayat-transaksi.tsx":"35","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\test.tsx":"36","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\index.tsx":"37","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\inventory.tsx":"38","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk\\[pid].tsx":"39","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Toko.tsx":"40","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\ModalEmpty.tsx":"41","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Notification.tsx":"42","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\table.tsx":"43","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Table\\Table.tsx":"44","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Select.tsx":"45","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\500.tsx":"46","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk.tsx":"47","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\ButtonLink.tsx":"48","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Alert.tsx":"49","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\PlanModal.tsx":"50","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Pos.tsx":"51","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\NavigationToko.tsx":"52","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\kasir.tsx":"53"},{"size":853,"mtime":1655888308625,"results":"54","hashOfConfig":"55"},{"size":1700,"mtime":1655888332060,"results":"56","hashOfConfig":"55"},{"size":1902,"mtime":1655888385006,"results":"57","hashOfConfig":"55"},{"size":1316,"mtime":1655888402846,"results":"58","hashOfConfig":"55"},{"size":5671,"mtime":1655889377788,"results":"59","hashOfConfig":"55"},{"size":6755,"mtime":1656224841739,"results":"60","hashOfConfig":"55"},{"size":13037,"mtime":1656344781428,"results":"61","hashOfConfig":"55"},{"size":915,"mtime":1655890062291,"results":"62","hashOfConfig":"55"},{"size":4413,"mtime":1656222500101,"results":"63","hashOfConfig":"55"},{"size":532,"mtime":1656225817308,"results":"64","hashOfConfig":"55"},{"size":622,"mtime":1655769019188,"results":"65","hashOfConfig":"55"},{"size":919,"mtime":1656219007664,"results":"66","hashOfConfig":"55"},{"size":493,"mtime":1655769019063,"results":"67","hashOfConfig":"55"},{"size":1209,"mtime":1656344003095,"results":"68","hashOfConfig":"55"},{"size":888,"mtime":1655769019063,"results":"69","hashOfConfig":"55"},{"size":1109,"mtime":1655769019063,"results":"70","hashOfConfig":"55"},{"size":811,"mtime":1655769019063,"results":"71","hashOfConfig":"55"},{"size":757,"mtime":1655769019063,"results":"72","hashOfConfig":"55"},{"size":181,"mtime":1655769019063,"results":"73","hashOfConfig":"55"},{"size":899,"mtime":1656140396602,"results":"74","hashOfConfig":"55"},{"size":1500,"mtime":1656399056658,"results":"75","hashOfConfig":"55"},{"size":2207,"mtime":1655815677852,"results":"76","hashOfConfig":"55"},{"size":335,"mtime":1655769019063,"results":"77","hashOfConfig":"55"},{"size":259,"mtime":1655769019063,"results":"78","hashOfConfig":"55"},{"size":480,"mtime":1655769019063,"results":"79","hashOfConfig":"55"},{"size":2266,"mtime":1655769019063,"results":"80","hashOfConfig":"55"},{"size":1062,"mtime":1655775174917,"results":"81","hashOfConfig":"55"},{"size":507,"mtime":1655769019080,"results":"82","hashOfConfig":"55"},{"size":928,"mtime":1655769019080,"results":"83","hashOfConfig":"55"},{"size":1814,"mtime":1655769019080,"results":"84","hashOfConfig":"55"},{"size":731,"mtime":1655769019080,"results":"85","hashOfConfig":"55"},{"size":1223,"mtime":1656138725452,"results":"86","hashOfConfig":"55"},{"size":851,"mtime":1655888299943,"results":"87","hashOfConfig":"55"},{"size":13692,"mtime":1656345170038,"results":"88","hashOfConfig":"55"},{"size":3505,"mtime":1655814613500,"results":"89","hashOfConfig":"55"},{"size":7208,"mtime":1656273793232,"results":"90","hashOfConfig":"55"},{"size":568,"mtime":1656255000379,"results":"91","hashOfConfig":"55"},{"size":11509,"mtime":1656400040159,"results":"92","hashOfConfig":"55"},{"size":687,"mtime":1655814593352,"results":"93","hashOfConfig":"55"},{"size":3474,"mtime":1656400040159,"results":"94","hashOfConfig":"55"},{"size":1056,"mtime":1656142551215,"results":"95","hashOfConfig":"55"},{"size":1272,"mtime":1655769019080,"results":"96","hashOfConfig":"55"},{"size":1180,"mtime":1655814634306,"results":"97","hashOfConfig":"55"},{"size":3748,"mtime":1656149198211,"results":"98","hashOfConfig":"55"},{"size":1317,"mtime":1656400040159,"results":"99","hashOfConfig":"55"},{"size":851,"mtime":1656243677882,"results":"100","hashOfConfig":"55"},{"size":14335,"mtime":1656346596623,"results":"101","hashOfConfig":"55"},{"size":1001,"mtime":1656345043151,"results":"102","hashOfConfig":"55"},{"size":1619,"mtime":1655999339467,"results":"103","hashOfConfig":"55"},{"size":7692,"mtime":1656345043174,"results":"104","hashOfConfig":"55"},{"size":262,"mtime":1656398428992,"results":"105","hashOfConfig":"55"},{"size":1130,"mtime":1656398381257,"results":"106","hashOfConfig":"55"},{"size":3682,"mtime":1656400285286,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sizar7",{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\404.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\change-password.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\forgot-password.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\resend-email.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signin.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\auth\\signup.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\index.tsx",["286"],[],"import type { NextPage } from \"next\";\r\nimport Head from \"next/head\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Dropdown,\r\n  Layout,\r\n  PlanCard,\r\n  Ratings,\r\n  ReviewCard,\r\n} from \"../components\";\r\nimport { GetSubscribePlans } from \"../services/subscribe.service\";\r\nimport style from \"../styles/LandingPage.module.css\";\r\nimport { SubscribePlan } from \"../types\";\r\n\r\nconst Home: NextPage = () => {\r\n  const [plans, setPlans] = useState<SubscribePlan[]>([]);\r\n  useEffect(() => {\r\n    GetSubscribePlans()\r\n      .then((res) => {\r\n        setPlans(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Imposery</title>\r\n        <meta name=\"description\" content=\"Inposery Landing Page\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      <Layout>\r\n        <header className={style.header}>\r\n          <div className=\"container flex-row-center\">\r\n            <div className={style.headerText}>\r\n              <h1 className={style.title}>\r\n                Manage Your{\" \"}\r\n                <span className=\"text-blue-primer\">Store Sales</span> and{\" \"}\r\n                <span className=\"text-blue-primer\">Revenue</span> Easily\r\n              </h1>\r\n              <p className={style.subtitle}>\r\n                We offer the convenience of your POS System. with various\r\n                mainstay features such as calculating daily sales, setting\r\n                roles, inventory management, daily, monthly, weekly transactions\r\n                in your store.\r\n              </p>\r\n              <button className=\"btn-big btn-link mx-auto\">GET STARTED</button>\r\n              <Link href=\"\">\r\n                <a>Subscribe from IDR 80k/month</a>\r\n              </Link>\r\n            </div>\r\n            <div className={style.headerArt}>\r\n              <Image\r\n                src=\"/images/ilustration.svg\"\r\n                layout=\"fill\"\r\n                alt=\"illustration\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <section className={`${style.feature} relative`}>\r\n          <div className={`${style.eclipse} ${style.eclipse1}`}>\r\n            <Image src=\"/images/Eclipse.svg\" layout=\"fill\" alt=\"eclipse\" />\r\n          </div>\r\n          <div className={`${style.eclipse} ${style.eclipse2}`}>\r\n            <Image src=\"/images/Eclipse.svg\" alt=\"Eclipse\" layout=\"fill\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <h1 className={style.featureTitle}>\r\n              WE PROVIDE YOU<span className={`${style.longbox} mx-auto`}></span>\r\n            </h1>\r\n            <p className={style.featureSubtitle}>\r\n              Some of the features that we provide to your store, to support\r\n              ease of transactions and calculation of your sales\r\n            </p>\r\n            <div className={style.featureGrid}>\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n              <Card\r\n                icon=\"/icons/facebook.svg\"\r\n                title=\"Daily Transaction\"\r\n                subtitle=\"View daily transaction information.\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.benefits}>\r\n          <div className=\"container flex-row-center justify-between gap-20\">\r\n            <div className={style.benefitsCard}>\r\n              <h1>Busines Advantage Using</h1>\r\n              <h1 className=\"text-blue-primer\">POS System</h1>\r\n              <ul>\r\n                <li>Regular business finance management.</li>\r\n                <li>Information about sales/profit is more systematic.</li>\r\n                <li>Organized business financial management</li>\r\n              </ul>\r\n            </div>\r\n            {/* <div className={style.ilustration2}> */}\r\n            <img\r\n              src=\"/images/ilustration2.svg\"\r\n              alt=\"Ilustration 2\"\r\n              className={style.ilustration2}\r\n            />\r\n            {/* </div> */}\r\n          </div>\r\n        </section>\r\n        <section className={style.faq}>\r\n          <div className=\"container flex-row-center justify-between\">\r\n            <div className={style.faqWrapper}>\r\n              <h1 className={style.faqTitle}>\r\n                Frequently Ask Question (F.A.Q)\r\n              </h1>\r\n              <ul className={style.faqUl}>\r\n                <Dropdown\r\n                  question=\"How long can I use the free trial available?\"\r\n                  answer=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!\"\r\n                />\r\n                <Dropdown\r\n                  question=\"Can I upload anything I want on there?\"\r\n                  answer=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto! \"\r\n                />\r\n                <Dropdown\r\n                  question=\"How many shops can I create in once\"\r\n                  answer=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!\"\r\n                />\r\n                <Dropdown\r\n                  question=\"How many shops can I create in once\"\r\n                  answer=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae, rem eos, quaerat ut dignissimos ipsa commodi doloribus excepturi vero quam reiciendis, saepe id nobis natus dolore fugit ducimus debitis architecto!\"\r\n                />\r\n              </ul>\r\n            </div>\r\n            <div className={style.ilustration3}>\r\n              <Image\r\n                src=\"/images/ilustration3.svg\"\r\n                alt=\"Ilustration 3\"\r\n                layout=\"fill\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.plans}>\r\n          <div className=\"container\">\r\n            <h1 className={style.plansTitle}>15 - days free trial.</h1>\r\n            <p className={style.plansSubtitle}>Try Our POS System for free</p>\r\n            <div className={style.plansWraper}>\r\n              {plans.map((data: any, index: number) => {\r\n                return (\r\n                  <PlanCard\r\n                    key={data.id}\r\n                    recomend={index == 1 && true}\r\n                    data={data}\r\n                    onClick={() => null}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={style.review}>\r\n          <div className={`${style.eclipse} ${style.eclipse1}`}>\r\n            <Image src=\"/images/Eclipse.svg\" alt=\"Eclipse\" layout=\"fill\" />\r\n          </div>\r\n          <div className={`${style.eclipse} ${style.eclipse2}`}>\r\n            <Image src=\"/images/Eclipse.svg\" alt=\"Eclipse\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.reviewText}>\r\n            <h1 className={style.reviewTitle}>\r\n              What Our <span>Customer Are Saying</span>\r\n            </h1>\r\n            <p className={style.reviewSubtitle}>\r\n              Our customer love it about POS system to engage their bussiness\r\n              and help them to get efficiency when calculate their revenue\r\n            </p>\r\n          </div>\r\n          <div className={style.reviewWraper}>\r\n            <ReviewCard\r\n              img=\"/images/avatar.png\"\r\n              reviewer=\"Jhony Deep\"\r\n              job=\"Cofee shop owner\"\r\n              rating={5}\r\n              text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\"\r\n            />\r\n            <ReviewCard\r\n              img=\"/images/avatar.png\"\r\n              reviewer=\"Jhony Deep\"\r\n              job=\"Cofee shop owner\"\r\n              rating={5}\r\n              text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\"\r\n            />\r\n            <ReviewCard\r\n              img=\"/images/avatar.png\"\r\n              reviewer=\"Jhony Deep\"\r\n              job=\"Cofee shop owner\"\r\n              rating={5}\r\n              text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\"\r\n            />\r\n            <ReviewCard\r\n              img=\"/images/avatar.png\"\r\n              reviewer=\"Jhony Deep\"\r\n              job=\"Cofee shop owner\"\r\n              rating={5}\r\n              text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\"\r\n            />\r\n            <ReviewCard\r\n              img=\"/images/avatar.png\"\r\n              reviewer=\"Jhony Deep\"\r\n              job=\"Cofee shop owner\"\r\n              rating={5}\r\n              text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus ratione molestiae a, animi obcaecati aliquid iure nisi velit recusandae sed corrupti. Dolor quia laborum explicabo incidunt assumenda soluta dignissimos deleniti?\"\r\n            />\r\n          </div>\r\n          {/* <div className=\"review-control\">\r\n          <img src=\"/icons/BigRightArrowDead.svg\" alt=\"Left Arrow\" className='prev'/>\r\n          <img src=\"/icons/BigRightArrow.svg\" alt=\"Right Arrow\" className='next'/>\r\n        </div> */}\r\n        </section>\r\n        <section className={style.mobile}>\r\n          <div className=\"container\">\r\n            <div className={style.mobileWraper}>\r\n              <h1 className={style.mobileTitle}>\r\n                Manage your Transactions through the{\" \"}\r\n                <span>Mobile application </span>and view the Dashboard through\r\n                the <span>Website</span>\r\n              </h1>\r\n              <p className={style.mobileSubtitle}>\r\n                Download the app to manage your projects, keep track of the\r\n                progress and complete tasks without procastinating. Stay on\r\n                track and complete on time!\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className={style.mobileImg1}>\r\n            <Image src=\"/images/PhoneMockup.png\" alt=\"Mobile\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.mobileImg2}>\r\n            <Image src=\"/images/PhoneMockup.png\" alt=\"Mobile\" layout=\"fill\" />\r\n          </div>\r\n        </section>\r\n        <section className={style.prefooter}>\r\n          <div className=\"container\">\r\n            <Image\r\n              width={270}\r\n              height={52}\r\n              src=\"/icons/InPOSery.svg\"\r\n              alt=\"Logo\"\r\n            />\r\n            <div className={style.prefooterText}>\r\n              <p>Download Now</p>\r\n              <p>License</p>\r\n            </div>\r\n            <div className={style.prefooterNav}>\r\n              <Link href=\"/\">\r\n                <a className={style.preefooterNavItem}>Home</a>\r\n              </Link>\r\n              <Link href=\"\">\r\n                <a className={style.preefooterNavItem}>Feature</a>\r\n              </Link>\r\n              <Link href=\"\">\r\n                <a className={style.preefooterNavItem}>Review</a>\r\n              </Link>\r\n              <Link href=\"\">\r\n                <a className={style.preefooterNavItem}>Pricing</a>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\maintenance.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\test.tsx",["287"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { Navigation, Notification } from \"../components\";\r\nimport Alert from \"../components/Modals/Alert\";\r\nimport Modal from \"../components/Modals/Modal\";\r\nimport { productAvatar } from \"../services/product.service\";\r\n\r\ntype Props = {};\r\n\r\nconst Test: React.FC<Props> = (props) => {\r\n  // const fetcher = (url: string) => axios.post(url, {\r\n  //     'email':'nando5@gmail.com',\r\n  //     'password':'frado'\r\n  // }).then(res=>res.data)\r\n\r\n  // const fetcher = (url: string) =>\r\n  //   axios.get('')\r\n\r\n  // const { data, error } = useSWR(\r\n  //   \"http://localhost:4000/api/v1/auth/login\",\r\n  //   fetcher\r\n  // );\r\n  // if (error) return <div>{JSON.stringify(error)}</div>;\r\n  // if (!data) return <div>Loading...</div>;\r\n  // return <div>{JSON.stringify(data)}</div>;\r\n  // return <Modal visible={true} title=\"Pala kau\" />;\r\n\r\n  // axios\r\n  //   .get(\"http://localhost:4000/api/v1/auth/google\", {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       \"Access-Control-Allow-Origin\": \"http://localhost:4000\",\r\n  //       // \"Access-Control-Allow-Origin\": \"*\",\r\n  //     },\r\n  //   })\r\n  //   .then((res) => console.log(res));\r\n  // userService.profile().then((resp) => console.log(resp));\r\n\r\n  // const [showModal, setShowModal] = useState<boolean>(true);\r\n  // const [deleting, setDeleting] = useState<boolean>(false);\r\n\r\n  // const getProfile = async () => {\r\n  //   try {\r\n  //     const response = await authService.profile();\r\n  //     setProfile(response.data);\r\n  //   } catch (error) {\r\n  //     console.log(\"error\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const deleteSembarang = () => {\r\n  //   setDeleting(true);\r\n  //   try {\r\n  //     setTimeout(() => {\r\n  //       setDeleting(false);\r\n  //       setShowModal(false);\r\n  //     }, 5000);\r\n  //   } catch (error) {\r\n  //     setDeleting(false);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getProfile();\r\n  // }, []);\r\n\r\n  // let emailVerifiedStatus = \"Belum Terverifikasi\";\r\n  // if (profile && profile.isEmailVerified) {\r\n  //   emailVerifiedStatus = \"Terverifikasi\";\r\n  // }\r\n  // const avatar = () =>\r\n  //   axios\r\n  //     .get(\"http://localhost:4000/api/v1/users/profile\", {\r\n  //       headers: {\r\n  //         Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJzYXBlaWlkd0BnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQwOCR5Q0Y2dU0wUlEuNi52c3FZdTY2dGwud2JxSnRjMlJyNXI2L3NmR2FBZUhKaVEyNU1RUWJlNiIsInJvbGUiOiJTdXBlckFkbWluIiwiaWF0IjoxNjUzOTg2NTU1LCJleHAiOjE2NTQwNzI5NTV9.LOVI_89uMNtp-9g9rB9lcN4Zwa95jZxHnu9OeHZc1Vc`,\r\n  //       },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //     });\r\n  // const avatar = axios.get(\"http://api-dev.inposery.com/api/v1/users/avatar\",{\r\n  //   headers: {\r\n  //     //         Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJzYXBlaWlkd0BnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQwOCR5Q0Y2dU0wUlEuNi52c3FZdTY2dGwud2JxSnRjMlJyNXI2L3NmR2FBZUhKaVEyNU1RUWJlNiIsInJvbGUiOiJTdXBlckFkbWluIiwiaWF0IjoxNjUzOTg2NTU1LCJleHAiOjE2NTQwNzI5NTV9.LOVI_89uMNtp-9g9rB9lcN4Zwa95jZxHnu9OeHZc1Vc`,\r\n  //     //       },\r\n  // }).then((res) => {console.log(res)});}))\r\n  const [open, setOpen] = useState(false);\r\n  const handleDelete = (id: number) => {\r\n    setOpen(true);\r\n\r\n    <Alert\r\n      visible={open}\r\n      onCancel={() => setOpen(!open)}\r\n      onOK={() => console.log(id)}\r\n      title={\"Success\"}\r\n      message=\"Data berhasil dihapus\"\r\n    />;\r\n  };\r\n  const [avatar, setAvatar] = useState();\r\n  const [image, setImage] = useState();\r\n  return (\r\n    <>\r\n      {/* <Modal\r\n        onBack={() => null}\r\n        visible={showModal}\r\n        okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n        title=\"Modal\"\r\n        onOK={() => deleteSembarang()}\r\n        onCancel={() => setShowModal(false)}\r\n        okButtonProps={{ disabled: deleting }}\r\n        cancelButtonProps={{ disabled: deleting }}\r\n      /> */}\r\n      {/* {avatar()} */}\r\n      <button onClick={() => handleDelete(1)}>Nama</button>\r\n      <button onClick={() => handleDelete(2)}>Nama</button>\r\n      <button\r\n        onClick={() => productAvatar(47).then((res) => setAvatar(res.data))}\r\n      >\r\n        avatar\r\n      </button>\r\n      <img src={avatar} alt=\"\" />\r\n      {/* <Notification /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_app.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\_document.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\Button.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\Card.tsx",["288","289"],[],"import React from 'react'\r\nimport style from '../../styles/Cards.module.css'\r\n\r\ntype Props = {\r\n  icon: string,\r\n  title: string,\r\n  subtitle: string\r\n}\r\n\r\nconst Card: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <div className={style.card}>\r\n        <img src={props.icon} className={style.cardIcon} />\r\n        <h1 className={style.cardTitle}>{props.title}</h1>\r\n        <p className={style.cardSubtitle}>{props.subtitle}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\PlanCard.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\ReviewCard.tsx",["290"],[],"import Image from \"next/image\";\r\nimport React from \"react\";\r\nimport { Ratings } from \"..\";\r\nimport style from \"../../styles/Cards.module.css\";\r\n\r\ntype Props = {\r\n  reviewer: string;\r\n  job: string;\r\n  rating: number;\r\n  text: string;\r\n  img: string;\r\n};\r\n\r\nconst ReviewCard: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <div className={style.reviewCard}>\r\n        <div className={style.reviewImg}>\r\n          <Image src={props.img} layout=\"fill\" objectFit=\"cover\" />\r\n        </div>\r\n        <div className={style.reviewer}>{props.reviewer}</div>\r\n        <div className=\"flex-row-center justify-between\">\r\n          <div className={style.reviewerJob}>{props.job}</div>\r\n          <Ratings disable={true} ratings={props.rating} />\r\n        </div>\r\n        <div className={style.reviewerText}>{props.text}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Cards\\StoreCard.tsx",["291","292","293"],[],"import Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport React from \"react\";\r\nimport { storeDestroy } from \"../../services/store.service\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\n\r\ntype Props = {\r\n  id: number;\r\n  link: string;\r\n  name: string;\r\n  address: string;\r\n};\r\n\r\nconst StoreCard: React.FC<Props> = (props) => {\r\n  const handleDelete = async () => {\r\n    await storeDestroy(props.id);\r\n    Router.reload();\r\n  };\r\n  return (\r\n    <div className={style.card}>\r\n      <div className={style.cardOption}>\r\n        <img src=\"/icons/titik3.svg\" alt=\"\" />\r\n        <div className={style.cardOptionItem}>\r\n          <button onClick={() => handleDelete()}>Hapus {props.id}</button>\r\n        </div>\r\n      </div>\r\n      <img src=\"/icons/home.svg\" className={style.cardIcon}></img>\r\n      <Link href={props.link}>\r\n        <a>\r\n          <h1 className={style.cardTitle}>{props.name}</h1>\r\n        </a>\r\n      </Link>\r\n      <p className={style.cardSubitle}>{props.address}</p>\r\n      <div className={style.cardProgress}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreCard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Dropdown.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Footers\\Footer.tsx",["294","295","296","297","298","299"],[],"import Link from 'next/link'\r\nimport React from 'react'\r\nimport style from \"../../styles/Footer.module.css\";\r\n\r\ntype Props = {}\r\n\r\nconst Footer: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <footer className={style.footer}>\r\n        <div className=\"container relative\">\r\n          <p className={style.footerText}>© 2021 Inposery. All rights reserved</p>\r\n          <div className={style.footerSosmed}>\r\n            <Link href=\"\"><img src=\"/icons/facebook.svg\" alt=\"Facebook\" /></Link>\r\n            <Link href=\"\"><img src=\"/icons/twitter.svg\" alt=\"Tweeter\" /></Link>\r\n            <Link href=\"\"><img src=\"/icons/instagram.svg\" alt=\"Instagram\" /></Link>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Form.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Input.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\index.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Dashboard.tsx",["300","301","302","303"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\n// import { userService } from \"../../services\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport Notification from \"../Navigations/Notification\";\r\n\r\ntype Props = {};\r\n\r\nconst Dashboard: React.FC<Props> = (props) => {\r\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className={style.nav}>\r\n        <div className={style.start}>\r\n          <div className={style.diamonds}>\r\n            <Image src=\"/icons/diamonds.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n          <div className={style.logo}>\r\n            <Image src=\"/icons/InPOSery.svg\" alt=\"logo\" layout=\"fill\" />\r\n          </div>\r\n        </div>\r\n        <div className={style.end}>\r\n          <div className={style.notif}>\r\n            <Image\r\n              src=\"/icons/bell.svg\"\r\n              alt=\"logo\"\r\n              layout=\"fill\"\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            />\r\n            <Notification visible={isOpen} />\r\n          </div>\r\n          <div className={style.profile}></div>\r\n        </div>\r\n      </nav>\r\n      <div className={style.sidebar}>\r\n        <div className={style.sidebarTop}>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/home.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/ntah.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/fileSetting.svg\" alt=\"\" />\r\n              Home\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className={style.sidebarBottom}>\r\n          <Link href=\"/\">\r\n            <a className={style.sidebarItems}>\r\n              <img src=\"/icons/questionCircle.svg\" alt=\"\" />\r\n              F.A.Q\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <main className={style.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Guest.tsx",["304","305"],[],"import Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst Guest: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <Link href={\"/\"}>\r\n        <img src=\"/icons/InPOSery.svg\" alt=\"guestLogo\" className=\"guestLogo\" />\r\n      </Link>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Guest;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Layout.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modal.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Modal.tsx",["306"],[],"import React, { useState } from \"react\";\r\nimport style from \"../../styles/Modal.module.css\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  children?: React.ReactNode;\r\n  title: React.ReactNode;\r\n  onOK: () => void;\r\n  onCancel: () => void;\r\n  onBack: () => void;\r\n  okText?: React.ReactNode;\r\n  cancelText?: React.ReactNode;\r\n  okButtonProps?: React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  >;\r\n  cancelButtonProps?: React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  >;\r\n};\r\n\r\nconst Modal: React.FC<Props> = (props) => {\r\n  // const [isOpen, setIsOpen] = useState<boolean>(props.visible || false);\r\n  if (!props.visible) return <></>;\r\n  else\r\n    return (\r\n      <div className={style.modalContainer}>\r\n        <div className={style.modalCentered}>\r\n          <div className={style.modal}>\r\n            <div className={style.modalHeader}>\r\n              <button\r\n                className={style.modalBackButton}\r\n                onClick={() => props.onBack()}\r\n              >\r\n                <img\r\n                  src=\"/icons/backButton.svg\"\r\n                  alt=\"\"\r\n                  width={20}\r\n                  height={20}\r\n                />\r\n              </button>\r\n              <h2 className={style.modalTitle}>\r\n                {props.title ? props.title : \"Title\"}\r\n              </h2>\r\n              <button\r\n                className={style.modalActionClose}\r\n                onClick={() => props.onCancel()}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n            <div className={style.modalBody}>{props.children}</div>\r\n            <div className={style.modalFooter}>\r\n              <button\r\n                {...props.cancelButtonProps}\r\n                onClick={() => props.onCancel()}\r\n              >\r\n                {props.cancelText ? props.cancelText : \"Tutup\"}\r\n              </button>\r\n              <button {...props.okButtonProps} onClick={() => props.onOK()}>\r\n                {props.okText ? props.okText : \"OK\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Navigation.tsx",["307"],[],"import Link from \"next/link\";\r\nimport React from \"react\";\r\nimport style from \"../../styles/Navigation.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst Navigation: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <nav className={style.nav}>\r\n        <div className=\"container flex-row-center justify-between\">\r\n          <img src=\"/icons/InPOSery.svg\" alt=\"logo\" className=\"logo\" />\r\n          <div className={style.navLinks}>\r\n            <Link href=\"\">\r\n              <a className={style.navItem}>Home</a>\r\n            </Link>\r\n            <Link href=\"\">\r\n              <a className={style.navItem}>Feature</a>\r\n            </Link>\r\n            <Link href=\"\">\r\n              <a className={style.navItem}>Review</a>\r\n            </Link>\r\n            <Link href=\"\">\r\n              <a className={style.navItem}>Pricing</a>\r\n            </Link>\r\n          </div>\r\n          <Link href=\"/auth/signin\">\r\n            <a className=\"btn btnPrimary btnMedium\">Masuk</a>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingDisplay.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\RatingIcon.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\Ratings.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Ratings\\StarIcon.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\ErrorMsg.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\403.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\index.tsx",["308","309","310"],[],"import Link from \"next/link\";\r\nimport React, { FormEvent, useEffect, useReducer, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Dashboard,\r\n  Input,\r\n  StoreCard,\r\n  PlanCard,\r\n  ModalEmpty,\r\n  ButtonLink,\r\n} from \"../../components\";\r\nimport ErrorMsg from \"../../components/Forms/ErrorMsg\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport { StoreReducer } from \"../../reducer\";\r\nimport { decodeToken, getToken } from \"../../services/storage.service\";\r\nimport { stores, storesCreate } from \"../../services/store.service\";\r\nimport {\r\n  GetSubscribePlans,\r\n  PostSubscribePlanId,\r\n} from \"../../services/subscribe.service\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport { Store, SubscribePlan } from \"../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Index: React.FC<Props> = (props) => {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [state, dispatch] = useReducer(StoreReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      name: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n    },\r\n    error: {\r\n      statusCode: 0,\r\n      message: \"\",\r\n    },\r\n  });\r\n  const { isSubmitted, inputs, sending } = state;\r\n  const { name, phone, address } = inputs;\r\n  const store = () => {\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (!name && !phone && !address) return;\r\n\r\n    storesCreate(inputs)\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        // setToko();\r\n        console.log(resp);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        dispatch({\r\n          name: \"SET_ERROR\",\r\n          payload: {\r\n            statusCode: error,\r\n            message: error,\r\n          },\r\n        });\r\n      })\r\n      .finally(() => dispatch({ name: \"SET_SENDING\", payload: false }));\r\n  };\r\n  const [toko, setToko] = useState<Store[]>([]);\r\n  const [error, setError] = useState();\r\n\r\n  const hanldeSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    store();\r\n  };\r\n\r\n  useEffect(() => {\r\n    stores()\r\n      .then((res) => {\r\n        setToko(res.data.data);\r\n        console.log(toko);\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      });\r\n  }, []);\r\n  //\r\n  const token = getToken();\r\n  const user: any = token && decodeToken(token);\r\n  console.log(user.role);\r\n  // asdasd\r\n  const [step, setStep] = useState<number>(1);\r\n  const [modal, setModal] = useState<boolean>(false);\r\n  const [selectedPlan, setSelectedPlan] = useState<any>({});\r\n  const [plan, setPlan] = useState<SubscribePlan[]>([]);\r\n  const [jumlahItem, setJumlahItem] = useState<number>(1);\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => {\r\n    if (step > 1) setStep(step - 1);\r\n  };\r\n  const selected = (data: object) => {\r\n    setSelectedPlan(data);\r\n    nextStep();\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetSubscribePlans()\r\n      .then((res) => {\r\n        setPlan(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const reset = () => {\r\n    setModal(!modal);\r\n    setSelectedPlan({});\r\n    setStep(1);\r\n  };\r\n\r\n  const buatPesanan = () => {\r\n    PostSubscribePlanId(selectedPlan.id)\r\n      .then((res) => {\r\n        nextStep();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const payment = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <ModalEmpty\r\n            visible={modal}\r\n            title=\"Modal\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            footer={\r\n              <>\r\n                <div className=\"modalPlanText\">\r\n                  <p>Perlu konsultasi? Hubungi kami di </p>\r\n                  <a\r\n                    className=\"link\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    href=\"https://wa.me/081225846909?text=Saya%20ingin%20melakukan%20konsultasi%20dengan%20anda%20terkait%20plan%20pada%20web%20inposery.\"\r\n                  >\r\n                    WA 081225846909\r\n                  </a>\r\n                </div>\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPlan\">\r\n              {plan.map((data: any, index: number) => {\r\n                return (\r\n                  <PlanCard\r\n                    key={data.id}\r\n                    recomend={index == 1 && true}\r\n                    data={data}\r\n                    onClick={() => selected(data)}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 2:\r\n        return (\r\n          <ModalEmpty\r\n            visible={modal}\r\n            title=\"Informasi Pembayaran\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            // onBack={prevStep}\r\n            footer={\r\n              <>\r\n                <Button\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Buat Pesanan\"\r\n                  onClick={() => buatPesanan()}\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPembayaran\">\r\n              <div className=\"box rounded  bg-gray\">\r\n                <h4>Detail Pemesanan</h4>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item</th>\r\n                      <th>Jumlah Item</th>\r\n                      <th>Harga</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{selectedPlan.name}</td>\r\n                      <td>\r\n                        {/* <Button\r\n                          onClick={(e) => total > 0 && setTotal(total - 1)}\r\n                          text=\"-\"\r\n                          color=\"btnPrimary\"\r\n                          size=\"sd\"\r\n                        />\r\n                        <span>{total}</span>\r\n                        <Button\r\n                          onClick={(e) => setTotal(total + 1)}\r\n                          text=\"+\"\r\n                          color=\"btnPrimary\"\r\n                          size=\"sd\"\r\n                        /> */}\r\n                        <select\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={(e) =>\r\n                            setJumlahItem(parseInt(e.target.value))\r\n                          }\r\n                        >\r\n                          <option value=\"1\">1</option>\r\n                          <option value=\"2\">3</option>\r\n                          <option value=\"3\">5</option>\r\n                        </select>\r\n                      </td>\r\n                      <td>{selectedPlan.price * jumlahItem}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <label htmlFor=\"pembayaran\">Metode Pembayaran</label>\r\n                <select name=\"pembayaran\" id=\"\">\r\n                  <option value=\"\">Transfer</option>\r\n                  <option value=\"\">COD</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <p>\r\n                  Proses konfirmasi pembayaran akan membutuhkan waktu sekitar 20{\" \"}\r\n                  <br />\r\n                  menit jika menggunakan metode pembayaran manual. Mohon\r\n                  menunggu <br />\r\n                  dengan sabar dan terima kasih.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 3:\r\n        return (\r\n          <ModalEmpty\r\n            visible={modal}\r\n            // okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n            title=\"Konfirmasi Pembayaran\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            footer={\r\n              <>\r\n                <ButtonLink\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Kirim Bukti Pembayaran\"\r\n                  target=\"_blank\"\r\n                  href=\"https://wa.me/081225846909?text=Saya%20ingin%20melakukan%20konsultasi%20dengan%20anda%20terkait%20plan%20pada%20web%20inposery.\"\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalKonfirmasiPembayaran\">\r\n              {/* <button onClick={prevStep}>back</button> */}\r\n              <div className=\"circle bg-success\">\r\n                <img src=\"/icons/centang.svg\" alt=\"\" />\r\n              </div>\r\n              <h3>Pesanan Terhadap {selectedPlan.name} telah diproses</h3>\r\n              <p>Total Pembayaran yang harus dibayar</p>\r\n              <div className=\"box rounded bg-gray\">\r\n                <h1>Rp.{selectedPlan.price}</h1>\r\n              </div>\r\n              <h4>Metode Pembayaran</h4>\r\n              <p>BRI Virtual Account</p>\r\n              <h1>12731982749156924</h1>\r\n              <div className=\"box bg-gray rounded text-justify\">\r\n                <b>Note :</b> silahkan melakukan pembayaran dengan melakukan{\" \"}\r\n                <br />\r\n                transfer ke nomor rekening yang tertera. Setelah itu kirimkan{\" \"}\r\n                <br />\r\n                bukti pembayaran pada admin dengan mengclick tombol dibawah{\" \"}\r\n                <br />\r\n                atau bisa dialkukan di menu riwayat transaksi. Terimakasih\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n\r\n      default:\r\n        \"asd\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dashboard>\r\n      <header className={style.header}>\r\n        <h1 className={style.headerTitle}>Your Store</h1>\r\n        <form className={style.headerSearch}>\r\n          {/* <img src=\"/icons/search.svg\" alt=\"\" /> */}\r\n          <Input\r\n            name=\"search\"\r\n            onChange={() => null}\r\n            type=\"text\"\r\n            placeholder=\"Search your store ...\"\r\n          />\r\n        </form>\r\n        <Button\r\n          color=\"btnPrimary\"\r\n          text=\"+ Create New Store\"\r\n          onClick={\r\n            user.role === \"Owner\"\r\n              ? () => setShowModal(!showModal)\r\n              : () => setModal(!modal)\r\n          }\r\n          size=\"btnMedium\"\r\n        />\r\n      </header>\r\n\r\n      {toko[0] != null ? (\r\n        <div className={style.mainContent}>\r\n          {toko.map((key) => (\r\n            <StoreCard\r\n              key={key.id}\r\n              link={`toko/${key.id}`}\r\n              id={key.id}\r\n              name={key.name}\r\n              address={key.address}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className={style.emptyStore}>\r\n          <img src=\"/images/ilustration4.svg\" alt=\"\" />\r\n          <h2>Kamu belum memiliki toko.</h2>\r\n        </div>\r\n      )}\r\n\r\n      <ModalEmpty\r\n        visible={showModal}\r\n        title=\"Create Toko\"\r\n        onOK={() => null}\r\n        onCancel={() => setShowModal(false)}\r\n        footer={null}\r\n        // onBack={() => null}\r\n      >\r\n        <form className=\"tokoForm\" onSubmit={(e) => hanldeSubmit(e)}>\r\n          <div className=\"formHeader\">\r\n            <h1>Buat toko anda</h1>\r\n            <p>\r\n              Buat tokomu dan undang karyawan untuk manajemen toko yang lebih\r\n              baik\r\n            </p>\r\n          </div>\r\n          <Input\r\n            name=\"name\"\r\n            placeholder=\"Nama Toko Anda\"\r\n            type=\"text\"\r\n            label=\"Nama Toko\"\r\n            onChange={(event) =>\r\n              dispatch({\r\n                name: \"SET_INPUTS\",\r\n                payload: {\r\n                  name: (event.target as HTMLInputElement).value,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <ErrorMsg\r\n            isSubmitted={isSubmitted}\r\n            value={name}\r\n            isEmpty={!name}\r\n            name=\"Name\"\r\n            min={4}\r\n          />\r\n          <Input\r\n            name=\"phone\"\r\n            placeholder=\"No Telp Toko Anda\"\r\n            type=\"text\"\r\n            label=\"No Telpon Toko\"\r\n            onChange={(event) =>\r\n              dispatch({\r\n                name: \"SET_INPUTS\",\r\n                payload: {\r\n                  phone: (event.target as HTMLInputElement).value,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <ErrorMsg\r\n            isSubmitted={isSubmitted}\r\n            value={phone}\r\n            isEmpty={!phone}\r\n            name=\"No telp\"\r\n            min={12}\r\n          />\r\n          <Input\r\n            name=\"alamat\"\r\n            placeholder=\"Alamat Toko Anda\"\r\n            type=\"text\"\r\n            label=\"Alamat Toko\"\r\n            onChange={(event) =>\r\n              dispatch({\r\n                name: \"SET_INPUTS\",\r\n                payload: {\r\n                  address: (event.target as HTMLInputElement).value,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <ErrorMsg\r\n            isSubmitted={isSubmitted}\r\n            value={address}\r\n            isEmpty={!address}\r\n            name=\"Address\"\r\n          />\r\n          <Input\r\n            name=\"photo\"\r\n            placeholder=\"Logo Toko Anda\"\r\n            type=\"file\"\r\n            label=\"Logo Toko\"\r\n            onChange={() => null}\r\n          />\r\n\r\n          <div className=\"formFooter\">\r\n            <Button color=\"btnPrimary\" size=\"btnBig\" text=\"Submit\" />\r\n            <Button\r\n              color=\"btnInverse\"\r\n              size=\"btnBig\"\r\n              text=\"Batal\"\r\n              onClick={() => setShowModal(false)}\r\n            />\r\n          </div>\r\n        </form>\r\n      </ModalEmpty>\r\n\r\n      {payment()}\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\riwayat-transaksi.tsx",["311"],[],"import React, { useState } from \"react\";\r\nimport { Button, Dashboard, Input, ModalEmpty } from \"../../components\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\n\r\ntype Props = {};\r\n\r\nconst RiwayatTransaksi: React.FC = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const data = { price: 27000, name: \"Monthly\" };\r\n  const total = 2;\r\n  return (\r\n    <Dashboard>\r\n      <div className={style.header}>\r\n        <div className=\"text\">\r\n          <h1>Transaksi</h1>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil,\r\n            mollitia?\r\n          </p>\r\n        </div>\r\n        <form className={style.headerSearch}>\r\n          {/* <img src=\"/icons/search.svg\" alt=\"\" /> */}\r\n          <Input\r\n            name=\"search\"\r\n            onChange={() => null}\r\n            type=\"text\"\r\n            placeholder=\"Search your store ...\"\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <th>Tgl Pemesanan</th>\r\n          <th>No Pesanan</th>\r\n          <th>Plan</th>\r\n          <th>Harga</th>\r\n          <th>Quantity</th>\r\n          <th>Jumlah yang harus dibayar</th>\r\n          <th>Status</th>\r\n          <th>Aksi</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>27 April 2022</td>\r\n            <td>12RXKING76</td>\r\n            <td>Monthly</td>\r\n            <td>Rp. 27.000</td>\r\n            <td>{total}</td>\r\n            <td>Rp. 54.000</td>\r\n            <th>\r\n              <div className=\"text-danger\">Pending</div>\r\n            </th>\r\n            <td>\r\n              <div className=\"flex-row-center gap-20\">\r\n                <Button\r\n                  onClick={() => setShowModal(true)}\r\n                  text=\"Cara Bayar\"\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnSmall\"\r\n                />\r\n                <Button text=\"Batal\" color=\"btnInverse\" size=\"btnSmall\" />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <ModalEmpty\r\n        visible={showModal}\r\n        // okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n        title=\"Konfirmasi Pembayaran\"\r\n        onOK={() => null}\r\n        onCancel={() => setShowModal(false)}\r\n        footer={\r\n          <>\r\n            <Button\r\n              color=\"btnPrimary\"\r\n              size=\"btnBig\"\r\n              text=\"Konfirmasi Pesanan\"\r\n              onClick={() => null}\r\n            />\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"modalKonfirmasiPembayaran\">\r\n          {/* <button onClick={prevStep}>back</button> */}\r\n          <div className=\"circle bg-success\">\r\n            <img src=\"/icons/centang.svg\" alt=\"\" />\r\n          </div>\r\n          <h3>Pesanan 12RXKing telah diproses</h3>\r\n          <p>Total Pembayaran yang harus dibayar</p>\r\n          <div className=\"box rounded bg-gray\">\r\n            <h1>Rp.{data.price * total}</h1>\r\n          </div>\r\n          <h4>Metode Pembayaran</h4>\r\n          <p>BRI Virtual Account</p>\r\n          <h1>12731982749156924</h1>\r\n          <div className=\"box bg-gray rounded text-justify\">\r\n            <b>Note</b> silahkan melakukan pembayaran dengan melakukan <br />\r\n            transfer ke nomor rekening yang tertera. Setelah itu kirimkan <br />\r\n            bukti pembayaran pada admin dengan mengclick tombol konfirmasi{\" \"}\r\n            <br />\r\n            pembayaran.\r\n          </div>\r\n        </div>\r\n      </ModalEmpty>\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default RiwayatTransaksi;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\test.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\index.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\inventory.tsx",["312","313","314"],[],"import Link from \"next/link\";\r\nimport { Router, useRouter } from \"next/router\";\r\nimport React, {\r\n  FormEvent,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  ModalEmpty,\r\n  Select,\r\n  Table,\r\n  Toko,\r\n} from \"../../../components\";\r\nimport ErrorMsg from \"../../../components/Forms/ErrorMsg\";\r\nimport { InventoryReducer } from \"../../../reducer\";\r\nimport { categories } from \"../../../services/category.service\";\r\nimport {\r\n  AddInventory,\r\n  GetAllInventory,\r\n} from \"../../../services/inventory.service\";\r\nimport {\r\n  addProduct,\r\n  destroyProduct,\r\n  products,\r\n  updateProduct,\r\n} from \"../../../services/product.service\";\r\nimport { store } from \"../../../services/store.service\";\r\n\r\nimport style from \"../../../styles/Inventory.module.css\";\r\nimport {\r\n  Category,\r\n  Inventory,\r\n  Product,\r\n  Store,\r\n  TableColumn,\r\n} from \"../../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Inventory: React.FC<Props> = (props) => {\r\n  const [modal, setModal] = useState({\r\n    visible: false,\r\n    edit: false,\r\n    // key: 0,\r\n    // index: 0,\r\n  });\r\n  const router = useRouter();\r\n  const storeId = router.query.id;\r\n  const [toko, setToko] = useState<Store>();\r\n  const [inventory, setInventory] = useState<Inventory[]>([]);\r\n  const [produk, setProduk] = useState<Product[]>([]);\r\n  const [selectedInventory, setSelectedInventory] = useState<number>();\r\n  const [kategori, setKategori] = useState<Category[]>([]);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [state, dispatch] = useReducer(InventoryReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      productId: 0,\r\n      stock: 0,\r\n      description: \"\",\r\n    },\r\n    error: {\r\n      statusCode: 0,\r\n      message: \"\",\r\n    },\r\n  });\r\n  const { isSubmitted, inputs, sending, error } = state;\r\n  const { stock, description } = inputs;\r\n\r\n  const resetInput = () => {\r\n    dispatch({\r\n      name: \"SET_INPUTS\",\r\n      payload: {\r\n        productId: 0,\r\n        stock: 0,\r\n        description: \"\",\r\n      },\r\n    });\r\n    setModal({ ...modal, visible: false, edit: false });\r\n  };\r\n\r\n  const handleDelete = async (e: SyntheticEvent, id: number, index: number) => {\r\n    setInventory(inventory.filter((v, i) => i !== index));\r\n    destroyProduct(id, storeId);\r\n  };\r\n\r\n  const handleEdit = (e: SyntheticEvent, id: number, index: number) => {\r\n    setModal({ ...modal, visible: true, edit: true });\r\n    setSelectedInventory(id);\r\n\r\n    const item = inventory.find((p) => {\r\n      return p.id === id;\r\n    });\r\n    if (!item) return;\r\n\r\n    dispatch({\r\n      name: \"SET_INPUTS\",\r\n      payload: {\r\n        stock: item.stock,\r\n        description: item.description,\r\n      },\r\n    });\r\n  };\r\n\r\n  // const handleUpdateProduct = (e: FormEvent) => {\r\n  //   e.preventDefault();\r\n  //   if (\r\n  //     !stock &&\r\n  //     !description &&\r\n  //   )\r\n  //     return;\r\n\r\n  //   updateProduct(selectedInventory, storeId, inputs)\r\n  //     .then((resp) => {\r\n  //       dispatch({ name: \"SET_SENDING\", payload: true });\r\n  //       setInventory((prev) => {\r\n  //         const newInventorys = [...prev];\r\n  //         const inventory = newInventorys.find(\r\n  //           (inventory) => inventory.id === selectedInventory\r\n  //         );\r\n  //         if (!inventory) return;\r\n  //         inventory.stock = inputs.stock;\r\n  //         inventory.description = inputs.description;\r\n  //         return newInventorys;\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       dispatch({\r\n  //         name: \"SET_ERROR\",\r\n  //         payload: {\r\n  //           statusCode: error.response.data.statusCode,\r\n  //           message: error.response.data.message,\r\n  //         },\r\n  //       });\r\n  //     })\r\n  //     .finally(() => {\r\n  //       dispatch({ name: \"SET_SENDING\", payload: false });\r\n  //     });\r\n  // };\r\n\r\n  const hanldeSearch = (e: SyntheticEvent) => {\r\n    setSearch((e.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const indexedInventory: Inventory[] = useMemo(() => {\r\n    return inventory.filter((val) =>\r\n      val.product.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }, [inventory, search]);\r\n\r\n  const handleAddInventory = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (!stock && !description)\r\n      dispatch({\r\n        name: \"SET_ERROR\",\r\n        payload: {\r\n          isValid: true,\r\n        },\r\n      });\r\n\r\n    if (error.isValid) return;\r\n\r\n    AddInventory(inputs.productId, storeId, { stock, description })\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        GetAllInventory(storeId)\r\n          .then((res) => {\r\n            setInventory(res.data.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          name: \"SET_ERROR\",\r\n          payload: {\r\n            statusCode: error.response.data.statusCode,\r\n            message: error.response.data.message,\r\n          },\r\n        });\r\n      })\r\n      .finally(() => {\r\n        dispatch({ name: \"SET_SENDING\", payload: false });\r\n      });\r\n  };\r\n\r\n  const inventoryColumn: TableColumn<Inventory>[] = [\r\n    {\r\n      key: \"id\",\r\n      title: \"NO\",\r\n      dataType: \"numbering\",\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Nama Produk\",\r\n      render: (data) => `${data.product.name}`,\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Category\",\r\n      render: (data) => `${data.product.category.name}`,\r\n    },\r\n    {\r\n      key: \"stock\",\r\n      title: \"Stock\",\r\n    },\r\n    {\r\n      key: \"description\",\r\n      title: \"Description\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!router.isReady) return;\r\n    store(storeId)\r\n      .then((res) => {\r\n        setToko(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    products(storeId)\r\n      .then((res) => {\r\n        setProduk(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    GetAllInventory(storeId)\r\n      .then((res) => {\r\n        setInventory(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    categories()\r\n      .then((res) => {\r\n        setKategori(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [router.isReady]);\r\n\r\n  return (\r\n    <Toko>\r\n      <header>\r\n        <div className={`.flex-row ${style.inventoryToko}`}>\r\n          <img src=\"/images/avatar.png\" alt=\"avatar\" />\r\n          <div className=\"flex-col\">\r\n            <h1>{toko?.name}</h1>\r\n            <p>{toko?.address}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-row-center justify-between p-2\">\r\n          <div className=\"invetoryBreadcrumb\">\r\n            <Link href={\"/\"}>Dashboard</Link> /{\" \"}\r\n            <Link href={\"/\"}>Inventory</Link>\r\n          </div>\r\n          <div className={style.inventoryFungsi}>\r\n            <Button\r\n              text=\"Tambah Satuan\"\r\n              color=\"btnInverse\"\r\n              size=\"btnSmall\"\r\n              // icon=\"/icons/Plus.svg\"\r\n            />\r\n            <Button\r\n              text=\"Tambah Kategori\"\r\n              color=\"btnInverse\"\r\n              size=\"btnSmall\"\r\n              // icon=\"/icons/Plus.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className={style.inventoryContent}>\r\n        <div className={style.inventoryFilter}>\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={(e) => setFilter((e.target as HTMLSelectElement).value)}\r\n          >\r\n            <option value=\"filter\">filter</option>\r\n            <option value=\"nama\">nama</option>\r\n            <option value=\"kategori\">kategori</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari inventory...\"\r\n            onChange={(e) => hanldeSearch(e)}\r\n          />\r\n          <Button\r\n            // icon=\"/icons/Plus.svg\"\r\n            text=\"Tambah Inventory\"\r\n            size=\"btnSmall\"\r\n            color=\"btnPrimary\"\r\n            onClick={() => setModal({ ...modal, visible: true })}\r\n          />\r\n        </div>\r\n        {inventory[0] ? (\r\n          <div className=\"x-auto\">\r\n            <Table columns={inventoryColumn} data={indexedInventory} />\r\n          </div>\r\n        ) : (\r\n          <div className={style.emptyInventory}>\r\n            <img src=\"/images/produkKosong.svg\" alt=\"\" />\r\n            <h4 className=\"text-primary\">Belum ada inventory</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ModalEmpty\r\n        title=\"Tambah Inventory\"\r\n        visible={modal.visible}\r\n        edit={modal.edit}\r\n        onOK={() => null}\r\n        onCancel={() => {\r\n          setModal({ ...modal, visible: !modal.visible }), resetInput();\r\n        }}\r\n        footer={<></>}\r\n      >\r\n        {error.message} {modal.edit}\r\n        <form\r\n          onSubmit={\r\n            (e) => handleAddInventory(e)\r\n            // modal.edit\r\n            //   ? (e) => handleUpdateProduct(e)\r\n            //   : (e) => handleAddInventory(e)\r\n          }\r\n          className=\"flex flex-column gap-10\"\r\n        >\r\n          {state.error.message}\r\n          <div>\r\n            <Select\r\n              data={produk}\r\n              k=\"name\"\r\n              kValue=\"id\"\r\n              name=\"productId\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    productId: (e.target as HTMLSelectElement).value,\r\n                  },\r\n                })\r\n              }\r\n              label=\"Produk\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Input\r\n              name=\"stock\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    stock: (e.target as HTMLInputElement).valueAsNumber,\r\n                  },\r\n                })\r\n              }\r\n              value={stock}\r\n              placeholder=\"Stock awal\"\r\n              type=\"number\"\r\n              label=\"Stock awal\"\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={stock}\r\n              isEmpty={!stock}\r\n              name=\"Stock\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Input\r\n              name=\"description\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    description: (e.target as HTMLInputElement).value,\r\n                  },\r\n                })\r\n              }\r\n              placeholder=\"Deskripsi Inventory\"\r\n              type=\"text\"\r\n              label=\"Deskripsi Inventory\"\r\n              value={description}\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={description}\r\n              isEmpty={!description}\r\n              name=\"Deskripsi\"\r\n              min={4}\r\n              max={12}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              text={sending ? \"...Loading\" : \"Simpan Inventory\"}\r\n              size=\"btnBig\"\r\n              color=\"btnPrimary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </ModalEmpty>\r\n    </Toko>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk\\[pid].tsx",["315"],[],"import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { product } from \"../../../../services/product.service\";\r\n\r\ntype Props = {};\r\n\r\nconst Single: React.FC<Props> = (props) => {\r\n  const router = useRouter();\r\n  const pid = router.query.pid;\r\n  const [produk, setProduk] = useState([]);\r\n  useEffect(() => {\r\n    if (!router.isReady) return;\r\n\r\n    product(pid)\r\n      .then((res) => {\r\n        setProduk(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [router.isReady]);\r\n\r\n  return (\r\n    <div>\r\n      Single {pid} {JSON.stringify(produk)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Single;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Toko.tsx",["316","317","318","319","320","321","322","323"],[],"import Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport Notification from \"../Navigations/Notification\";\r\nimport style from \"../../styles/Dashboard.module.css\";\r\nimport { useRouter } from \"next/router\";\r\nimport Navigation from \"../Navigations/Navigation\";\r\n\r\ntype Props = {};\r\n\r\nconst Toko: React.FC<Props> = (props) => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  // console.log(router.pathname);\r\n  // console.log(router.query);\r\n  // console.log(router.asPath);\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={style.sidebar}>\r\n        <div className={style.sidebarTop}>\r\n          <Link href={`/toko/${router.query.id}`}>\r\n            <a\r\n              className={`${\r\n                router.pathname == \"/toko/[id]\" ? style.active : \"\"\r\n              } ${style.sidebarItems}`}\r\n            >\r\n              <img src=\"/icons/dashboard.svg\" alt=\"\" />\r\n              dashboard\r\n            </a>\r\n          </Link>\r\n          <Link href={`/toko/${router.query.id}/inventory`}>\r\n            <a\r\n              className={`${\r\n                router.pathname == `/toko/[id]/inventory` ? style.active : \"\"\r\n              } ${style.sidebarItems}`}\r\n            >\r\n              <img src=\"/icons/inventory.svg\" alt=\"\" />\r\n              inventory\r\n            </a>\r\n          </Link>\r\n          <Link href={`/toko/${router.query.id}/produk`}>\r\n            <a\r\n              className={`${\r\n                router.pathname == `/toko/[id]/produk` ? style.active : \"\"\r\n              } ${style.sidebarItems}`}\r\n            >\r\n              <img src=\"/icons/inventory.svg\" alt=\"\" />\r\n              produk\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? style.active : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/transaksi.svg\" alt=\"\" />\r\n              transaksi\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/laporan.svg\" alt=\"\" />\r\n              laporan\r\n            </a>\r\n          </Link>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/manajemen.svg\" alt=\"\" />\r\n              manajemen\r\n            </a>\r\n          </Link>\r\n\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/pengaturan.svg\" alt=\"\" />\r\n              pengaturan\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className={style.sidebarBottom}>\r\n          <Link href=\"/\">\r\n            <a\r\n              className={`${router.pathname == \"/\" ? \"active\" : \"\"} ${\r\n                style.sidebarItems\r\n              }`}\r\n            >\r\n              <img src=\"/icons/questionCircle.svg\" alt=\"\" />\r\n              F.A.Q\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <main className={style.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toko;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\ModalEmpty.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\Notification.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\table.tsx",["324"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nimport { products } from \"../../services/product.service\";\r\n\r\nimport { Product, TableColumn } from \"../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Tables: React.FC<Props> = (props) => {\r\n  const [product, setProduct] = useState<Array<Product>>([]);\r\n\r\n  useEffect(() => {\r\n    products(3)\r\n      .then((res) => {\r\n        setProduct(res.data.data);\r\n        console.log(product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columnPost: TableColumn<Product>[] = [\r\n    {\r\n      title: \"Nomor\",\r\n      key: \"id\",\r\n      dataType: \"numbering\",\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Nama\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n      render: (value) => (\r\n        <button onClick={() => console.log(\"id\", value.id)}>Delete</button>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Table columns={columnPost} data={product} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Table\\Table.tsx",["325"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TableProps } from \"../../types\";\r\nimport Button from \"../Buttons/Button\";\r\n\r\nconst Table: React.FC<TableProps> = (props) => {\r\n  const [perPage, setPerpage] = useState<number>(2);\r\n  const [localData, setLocalData] = useState<any[][]>();\r\n  const [selectedPage, setSelectedPage] = useState<number>(0);\r\n\r\n  const initTable = () => {\r\n    const initData = [...props.data];\r\n    const results = [];\r\n    const chunk_size = perPage;\r\n    while (initData.length > 0) {\r\n      results.push(initData.splice(0, chunk_size));\r\n    }\r\n    setLocalData(results);\r\n  };\r\n\r\n  // componentDidUpdate\r\n  useEffect(() => {\r\n    initTable();\r\n  }, [props.data, perPage]);\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {props.columns.map((column, index) => {\r\n              return <th key={index}>{column.title}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {localData && localData[selectedPage]\r\n            ? localData[selectedPage].map((data, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    {props.columns.map((column, indexColumn) => {\r\n                      let toShown = data[column.key];\r\n                      if (column.render) toShown = column.render(data, index);\r\n                      if (column.dataType === \"numbering\") {\r\n                        toShown = selectedPage * perPage + index + 1;\r\n                      }\r\n                      return <td key={indexColumn}>{toShown}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"p-2 flex-row-center justify-between w-full\">\r\n        <div className=\"flex-row-center items-center\">\r\n          <div>\r\n            <label htmlFor=\"perPage\">Rows per page</label>\r\n            <select\r\n              onChange={(e) => setPerpage(Number(e.target.value))}\r\n              value={perPage}\r\n              name=\"perPage\"\r\n              id=\"perPage\"\r\n              style={{\r\n                width: \"min-content\",\r\n                border: \"1px solid transparent\",\r\n                background: \"transparent\",\r\n              }}\r\n            >\r\n              <option value={\"2\"}>{2}</option>\r\n              <option value={\"20\"}>{20}</option>\r\n              <option value={\"50\"}>{50}</option>\r\n              <option value={\"100\"}>{100}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-row-center justify-between gap-10\">\r\n          {selectedPage >= 1 ? (\r\n            <Button\r\n              text=\"Sebelumnya\"\r\n              size=\"btnSmall\"\r\n              color=\"btnInverse\"\r\n              onClick={() => setSelectedPage((state) => state - 1)}\r\n            />\r\n          ) : null}\r\n          {localData\r\n            ? Array(localData.length)\r\n                .fill(0)\r\n                .map((d, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    text={`${index + 1}`}\r\n                    size=\"btnSmall\"\r\n                    color={index === selectedPage ? \"btnPrimary\" : \"btnInverse\"}\r\n                    onClick={() => setSelectedPage(index)}\r\n                  />\r\n                ))\r\n            : null}\r\n          {localData &&\r\n          localData[selectedPage] &&\r\n          selectedPage !== localData.length - 1 ? (\r\n            <Button\r\n              text=\"Selanjutnya\"\r\n              size=\"btnSmall\"\r\n              color=\"btnInverse\"\r\n              onClick={() => setSelectedPage((state) => state + 1)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Forms\\Select.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\500.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\toko\\[id]\\produk.tsx",["326","327","328"],[],"import Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, {\r\n  FormEvent,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  ModalEmpty,\r\n  Select,\r\n  Table,\r\n  Toko,\r\n} from \"../../../components\";\r\nimport ErrorMsg from \"../../../components/Forms/ErrorMsg\";\r\nimport { ProductReducer } from \"../../../reducer\";\r\nimport { categories } from \"../../../services/category.service\";\r\nimport {\r\n  addProduct,\r\n  destroyProduct,\r\n  products,\r\n  updateProduct,\r\n} from \"../../../services/product.service\";\r\nimport { store } from \"../../../services/store.service\";\r\n\r\nimport style from \"../../../styles/Inventory.module.css\";\r\nimport { Category, Product, Store, TableColumn } from \"../../../types\";\r\n\r\ntype Props = {};\r\n\r\nconst Produk: React.FC<Props> = (props) => {\r\n  const [modal, setModal] = useState({\r\n    visible: false,\r\n    edit: false,\r\n  });\r\n  const router = useRouter();\r\n  const storeId = router.query.id;\r\n  const [toko, setToko] = useState<Store>();\r\n  const [produk, setProduk] = useState<Product[]>([]);\r\n  const [selectedProduk, setSelectedProduk] = useState<number>();\r\n  const [kategori, setKategori] = useState<Category[]>([]);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [state, dispatch] = useReducer(ProductReducer, {\r\n    isSubmitted: false,\r\n    sending: false,\r\n    inputs: {\r\n      categoryName: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      unit: \"\",\r\n      groceryPrice: 0,\r\n      price: 0,\r\n    },\r\n    error: {\r\n      statusCode: 0,\r\n      message: \"\",\r\n    },\r\n  });\r\n  const { isSubmitted, inputs, sending, error } = state;\r\n  const { name, description, unit, groceryPrice, price, categoryName } = inputs;\r\n\r\n  const resetInput = () => {\r\n    dispatch({\r\n      name: \"SET_INPUTS\",\r\n      payload: {\r\n        categoryName: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        unit: \"\",\r\n        groceryPrice: 0,\r\n        price: 0,\r\n      },\r\n    });\r\n    setModal({ ...modal, visible: false, edit: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!router.isReady) return;\r\n    store(storeId)\r\n      .then((res) => {\r\n        setToko(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    products(storeId)\r\n      .then((res) => {\r\n        setProduk(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    categories()\r\n      .then((res) => {\r\n        setKategori(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [router.isReady]);\r\n\r\n  const handleDelete = async (e: SyntheticEvent, id: number) => {\r\n    const selected = produk.find((item) => item.id === id);\r\n    if (!selected) return;\r\n    setProduk(produk.filter((v, i) => i !== produk.indexOf(selected)));\r\n    destroyProduct(id, storeId);\r\n  };\r\n\r\n  const handleEdit = (e: SyntheticEvent, id: number) => {\r\n    setModal({ ...modal, visible: true, edit: true });\r\n    setSelectedProduk(id);\r\n\r\n    const item = produk.find((p) => {\r\n      return p.id === id;\r\n    });\r\n    if (!item) return;\r\n\r\n    dispatch({\r\n      name: \"SET_INPUTS\",\r\n      payload: {\r\n        name: item.name,\r\n        categoryName: item.category.name,\r\n        description: item.description,\r\n        groceryPrice: item.groceryPrice,\r\n        price: item.price,\r\n        unit: item.unit,\r\n      },\r\n    });\r\n  };\r\n  const handleUpdateProduct = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (\r\n      !name &&\r\n      !description &&\r\n      !unit &&\r\n      !groceryPrice &&\r\n      !price &&\r\n      !categoryName\r\n    )\r\n      return;\r\n\r\n    updateProduct(selectedProduk, storeId, inputs)\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        setProduk((prev) => {\r\n          const newProduks = [...prev];\r\n          const produk = newProduks.find(\r\n            (produk) => produk.id === selectedProduk\r\n          );\r\n          if (!produk) return prev;\r\n          produk.name = inputs.name;\r\n          produk.category.name = inputs.categoryName;\r\n          produk.description = inputs.description;\r\n          produk.groceryPrice = inputs.groceryPrice;\r\n          produk.price = inputs.price;\r\n          produk.unit = inputs.unit;\r\n          return newProduks;\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          name: \"SET_ERROR\",\r\n          payload: {\r\n            statusCode: error.response.data.statusCode,\r\n            message: error.response.data.message,\r\n          },\r\n        });\r\n      })\r\n      .finally(() => {\r\n        dispatch({ name: \"SET_SENDING\", payload: false });\r\n      });\r\n  };\r\n\r\n  const hanldeSearch = (e: SyntheticEvent) => {\r\n    setSearch((e.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const indexedProduk: Product[] = useMemo(() => {\r\n    return produk.filter((val) =>\r\n      val.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }, [produk, search]);\r\n\r\n  const handleAddProduct = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch({ name: \"SET_IS_SUBMITTED\" });\r\n\r\n    if (\r\n      !name &&\r\n      !description &&\r\n      !unit &&\r\n      !groceryPrice &&\r\n      !price &&\r\n      !categoryName\r\n    )\r\n      return;\r\n\r\n    addProduct(storeId, inputs)\r\n      .then((resp) => {\r\n        dispatch({ name: \"SET_SENDING\", payload: true });\r\n        setProduk([...produk, resp.data.data]);\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          name: \"SET_ERROR\",\r\n          payload: {\r\n            statusCode: error.response.data.statusCode,\r\n            message: error.response.data.message,\r\n          },\r\n        });\r\n      })\r\n      .finally(() => {\r\n        dispatch({ name: \"SET_SENDING\", payload: false });\r\n      });\r\n  };\r\n\r\n  const productColumn: TableColumn<Product>[] = [\r\n    {\r\n      key: \"id\",\r\n      title: \"NO\",\r\n      dataType: \"numbering\",\r\n    },\r\n    {\r\n      key: \"id\",\r\n      title: \"ID\",\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n    },\r\n    {\r\n      key: \"category\",\r\n      title: \"Category\",\r\n      render: (value) => `${value.category.name}`,\r\n    },\r\n    {\r\n      key: \"unit\",\r\n      title: \"Stock\",\r\n    },\r\n    {\r\n      key: \"price\",\r\n      title: \"Modal\",\r\n      render: (value) => `${value.price.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: \"groceryPrice\",\r\n      title: \"Modal\",\r\n      render: (value) => `${value.groceryPrice.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: \"description\",\r\n      title: \"Deskripsi\",\r\n    },\r\n    {\r\n      key: \"id\",\r\n      title: \"Action\",\r\n      render: (value, index) => (\r\n        <div className=\"flex-row-center gap-10\">\r\n          <Button\r\n            text=\"Edit\"\r\n            size=\"btnSmall\"\r\n            color=\"btnPrimary\"\r\n            onClick={(e) => handleEdit(e, value.id)}\r\n          />\r\n          <Button\r\n            text=\"Hapus\"\r\n            size=\"btnSmall\"\r\n            color=\"btnDanger\"\r\n            onClick={(e) => handleDelete(e, value.id)}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Toko>\r\n      {state.error.message}\r\n      <header>\r\n        <div className={`.flex-row ${style.inventoryToko}`}>\r\n          <img src=\"/images/avatar.png\" alt=\"avatar\" />\r\n          <div className=\"flex-col\">\r\n            <h1>{toko?.name}</h1>\r\n            <p>{toko?.address}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-row-center justify-between p-2\">\r\n          <div className=\"invetoryBreadcrumb\">\r\n            <Link href={\"/\"}>Dashboard</Link> /{\" \"}\r\n            <Link href={\"/\"}>Inventory</Link>\r\n          </div>\r\n          <div className={style.inventoryFungsi}>\r\n            <Button\r\n              text=\"Tambah Satuan\"\r\n              color=\"btnInverse\"\r\n              size=\"btnSmall\"\r\n              // icon=\"/icons/Plus.svg\"\r\n            />\r\n            <Button\r\n              text=\"Tambah Kategori\"\r\n              color=\"btnInverse\"\r\n              size=\"btnSmall\"\r\n              // icon=\"/icons/Plus.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className={style.inventoryContent}>\r\n        <div className={style.inventoryFilter}>\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={(e) => setFilter((e.target as HTMLSelectElement).value)}\r\n          >\r\n            <option value=\"filter\">filter</option>\r\n            <option value=\"nama\">nama</option>\r\n            <option value=\"kategori\">kategori</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari produk...\"\r\n            onChange={(e) => hanldeSearch(e)}\r\n          />\r\n          <Button\r\n            // icon=\"/icons/Plus.svg\"\r\n            text=\"Tambah Produk\"\r\n            size=\"btnSmall\"\r\n            color=\"btnPrimary\"\r\n            onClick={() => setModal({ ...modal, visible: true })}\r\n          />\r\n        </div>\r\n        {produk[0] ? (\r\n          <div className=\"x-auto\">\r\n            <Table columns={productColumn} data={indexedProduk} />\r\n          </div>\r\n        ) : (\r\n          <div className={style.emptyInventory}>\r\n            <img src=\"/images/produkKosong.svg\" alt=\"\" />\r\n            <h4 className=\"text-primary\">Belum ada produk</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ModalEmpty\r\n        title=\"Tambah Produk\"\r\n        visible={modal.visible}\r\n        edit={modal.edit}\r\n        onOK={() => null}\r\n        onCancel={() => {\r\n          setModal({ ...modal, visible: !modal.visible }), resetInput();\r\n        }}\r\n        footer={<></>}\r\n      >\r\n        {error.message} {modal.edit}\r\n        <form\r\n          onSubmit={\r\n            modal.edit\r\n              ? (e) => handleUpdateProduct(e)\r\n              : (e) => handleAddProduct(e)\r\n          }\r\n          className=\"flex flex-column gap-10\"\r\n        >\r\n          <div>\r\n            <Input\r\n              name=\"name\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: { name: (e.target as HTMLInputElement).value },\r\n                })\r\n              }\r\n              value={name}\r\n              placeholder=\"Nama Produk\"\r\n              type=\"text\"\r\n              label=\"Nama Produk\"\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={name}\r\n              isEmpty={!name}\r\n              name=\"Nama Produk\"\r\n              min={4}\r\n              max={12}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Select\r\n              data={kategori}\r\n              k=\"name\"\r\n              value={categoryName}\r\n              label=\"Kategori\"\r\n              name=\"categoryName\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    categoryName: (e.target as HTMLSelectElement).value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={categoryName}\r\n              isEmpty={!categoryName}\r\n              name=\"Category\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Input\r\n              name=\"description\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    description: (e.target as HTMLInputElement).value,\r\n                  },\r\n                })\r\n              }\r\n              placeholder=\"Deskripsi Produk\"\r\n              type=\"text\"\r\n              label=\"Deskripsi Produk\"\r\n              value={description}\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={description}\r\n              isEmpty={!description}\r\n              name=\"Deskripsi\"\r\n              min={4}\r\n              max={12}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Input\r\n              name=\"groceryPrice\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    groceryPrice: (e.target as HTMLInputElement).valueAsNumber,\r\n                  },\r\n                })\r\n              }\r\n              placeholder=\"Harga Modal\"\r\n              type=\"number\"\r\n              label=\"Harga Modal\"\r\n              value={groceryPrice}\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={groceryPrice.toLocaleString()}\r\n              isEmpty={!groceryPrice}\r\n              name=\"Harga Modal\"\r\n              min={4}\r\n              max={12}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Input\r\n              name=\"price\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    price: (e.target as HTMLInputElement).valueAsNumber,\r\n                  },\r\n                })\r\n              }\r\n              placeholder=\"Harga Jual\"\r\n              type=\"number\"\r\n              label=\"Harga Jual\"\r\n              value={price}\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={price.toLocaleString()}\r\n              isEmpty={!price}\r\n              name=\"Harga Modal\"\r\n              min={4}\r\n              max={12}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Select\r\n              k=\"unit\"\r\n              data={[{ unit: \"Lusin\" }, { unit: \"Pcs\" }]}\r\n              name=\"unit\"\r\n              label=\"Satuan\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  name: \"SET_INPUTS\",\r\n                  payload: {\r\n                    unit: (e.target as HTMLSelectElement).value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n            <ErrorMsg\r\n              isSubmitted={isSubmitted}\r\n              value={unit}\r\n              // isEmpty={!unit}\r\n              name=\"Satuan\"\r\n            />\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            text={sending ? \"...Loading\" : \"Simpan Produk\"}\r\n            size=\"btnBig\"\r\n            color=\"btnPrimary\"\r\n          />\r\n        </form>\r\n      </ModalEmpty>\r\n    </Toko>\r\n  );\r\n};\r\n\r\nexport default Produk;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Buttons\\ButtonLink.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\Alert.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Modals\\PlanModal.tsx",["329"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  GetSubscribePlans,\r\n  PostSubscribePlanId,\r\n} from \"../../services/subscribe.service\";\r\nimport Button from \"../Buttons/Button\";\r\nimport ButtonLink from \"../Buttons/ButtonLink\";\r\nimport PlanCard from \"../Cards/PlanCard\";\r\nimport ModalEmpty from \"./ModalEmpty\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n};\r\n\r\nconst PlanModal: React.FC<Props> = (props) => {\r\n  const [step, setStep] = useState<number>(1);\r\n  const [modal, setModal] = useState<boolean>(props.visible);\r\n  const [selectedPlan, setSelectedPlan] = useState<any>({});\r\n  const [plan, setPlan] = useState<any>([]);\r\n  const [jumlahItem, setJumlahItem] = useState<number>(1);\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => {\r\n    if (step > 1) setStep(step - 1);\r\n  };\r\n  const selected = (data: object) => {\r\n    setSelectedPlan(data);\r\n    nextStep();\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetSubscribePlans()\r\n      .then((res) => {\r\n        setPlan(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const reset = () => {\r\n    setModal(!modal);\r\n    setSelectedPlan({});\r\n  };\r\n\r\n  const buatPesanan = () => {\r\n    PostSubscribePlanId(selectedPlan.id)\r\n      .then((res) => {\r\n        nextStep();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const payment = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <ModalEmpty\r\n            visible={props.visible}\r\n            title=\"Modal\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            footer={\r\n              <>\r\n                <div className=\"modalPlanText\">\r\n                  <p>Perlu konsultasi? Hubungi kami di </p>\r\n                  <a\r\n                    className=\"link\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    href=\"https://wa.me/081225846909?text=Saya%20ingin%20melakukan%20konsultasi%20dengan%20anda%20terkait%20plan%20pada%20web%20inposery.\"\r\n                  >\r\n                    WA 081225846909\r\n                  </a>\r\n                </div>\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPlan\">\r\n              {plan.map((data: any, index: number) => {\r\n                return (\r\n                  <PlanCard\r\n                    key={data.id}\r\n                    recomend={index == 1 && true}\r\n                    data={data}\r\n                    onClick={() => selected(data)}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 2:\r\n        return (\r\n          <ModalEmpty\r\n            visible={modal}\r\n            title=\"Informasi Pembayaran\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            // onBack={prevStep}\r\n            footer={\r\n              <>\r\n                <Button\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Buat Pesanan\"\r\n                  onClick={() => buatPesanan()}\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalPembayaran\">\r\n              <div className=\"box rounded  bg-gray\">\r\n                <h4>Detail Pemesanan</h4>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item</th>\r\n                      <th>Jumlah Item</th>\r\n                      <th>Harga</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{selectedPlan.name}</td>\r\n                      <td>\r\n                        {/* <Button\r\n                          onClick={(e) => total > 0 && setTotal(total - 1)}\r\n                          text=\"-\"\r\n                          color=\"btnPrimary\"\r\n                          size=\"sd\"\r\n                        />\r\n                        <span>{total}</span>\r\n                        <Button\r\n                          onClick={(e) => setTotal(total + 1)}\r\n                          text=\"+\"\r\n                          color=\"btnPrimary\"\r\n                          size=\"sd\"\r\n                        /> */}\r\n                        <select\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={(e) =>\r\n                            setJumlahItem(parseInt(e.target.value))\r\n                          }\r\n                        >\r\n                          <option value=\"1\">1</option>\r\n                          <option value=\"2\">3</option>\r\n                          <option value=\"3\">5</option>\r\n                        </select>\r\n                      </td>\r\n                      <td>{selectedPlan.price * jumlahItem}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <label htmlFor=\"pembayaran\">Metode Pembayaran</label>\r\n                <select name=\"pembayaran\" id=\"\">\r\n                  <option value=\"\">Transfer</option>\r\n                  <option value=\"\">COD</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"box rounded bg-gray\">\r\n                <p>\r\n                  Proses konfirmasi pembayaran akan membutuhkan waktu sekitar 20{\" \"}\r\n                  <br />\r\n                  menit jika menggunakan metode pembayaran manual. Mohon\r\n                  menunggu <br />\r\n                  dengan sabar dan terima kasih.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n      case 3:\r\n        return (\r\n          <ModalEmpty\r\n            visible={modal}\r\n            // okText={deleting ? \"Deleting...\" : \"Delete\"}\r\n            title=\"Konfirmasi Pembayaran\"\r\n            onOK={() => null}\r\n            onCancel={() => reset()}\r\n            footer={\r\n              <>\r\n                <ButtonLink\r\n                  color=\"btnPrimary\"\r\n                  size=\"btnBig\"\r\n                  text=\"Kirim Bukti Pembayaran\"\r\n                  target=\"_blank\"\r\n                  href=\"https://wa.me/081225846909?text=Saya%20ingin%20melakukan%20konsultasi%20dengan%20anda%20terkait%20plan%20pada%20web%20inposery.\"\r\n                />\r\n              </>\r\n            }\r\n          >\r\n            <div className=\"modalKonfirmasiPembayaran\">\r\n              {/* <button onClick={prevStep}>back</button> */}\r\n              <div className=\"circle bg-success\">\r\n                <img src=\"/icons/centang.svg\" alt=\"\" />\r\n              </div>\r\n              <h3>Pesanan Terhadap {selectedPlan.name} telah diproses</h3>\r\n              <p>Total Pembayaran yang harus dibayar</p>\r\n              <div className=\"box rounded bg-gray\">\r\n                <h1>Rp.{selectedPlan.price}</h1>\r\n              </div>\r\n              <h4>Metode Pembayaran</h4>\r\n              <p>BRI Virtual Account</p>\r\n              <h1>12731982749156924</h1>\r\n              <div className=\"box bg-gray rounded text-justify\">\r\n                <b>Note :</b> silahkan melakukan pembayaran dengan melakukan{\" \"}\r\n                <br />\r\n                transfer ke nomor rekening yang tertera. Setelah itu kirimkan{\" \"}\r\n                <br />\r\n                bukti pembayaran pada admin dengan mengclick tombol dibawah{\" \"}\r\n                <br />\r\n                atau bisa dialkukan di menu riwayat transaksi. Terimakasih\r\n              </div>\r\n            </div>\r\n          </ModalEmpty>\r\n        );\r\n\r\n      default:\r\n        \"asd\";\r\n    }\r\n  };\r\n\r\n  return <>{payment()}</>;\r\n};\r\n\r\nexport default PlanModal;\r\n","C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Layouts\\Pos.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\components\\Navigations\\NavigationToko.tsx",[],[],"C:\\Users\\Sakti\\Downloads\\Coding\\MKA\\frontend-tim-d-batch-2\\pages\\kasir.tsx",[],[],{"ruleId":"330","severity":1,"message":"331","line":128,"column":13,"nodeType":"332","endLine":132,"endColumn":15},{"ruleId":"330","severity":1,"message":"331","line":121,"column":7,"nodeType":"332","endLine":121,"endColumn":34},{"ruleId":"330","severity":1,"message":"331","line":14,"column":9,"nodeType":"332","endLine":14,"endColumn":60},{"ruleId":"333","severity":1,"message":"334","line":14,"column":9,"nodeType":"332","endLine":14,"endColumn":60},{"ruleId":"333","severity":1,"message":"335","line":19,"column":11,"nodeType":"332","endLine":19,"endColumn":68},{"ruleId":"330","severity":1,"message":"331","line":22,"column":9,"nodeType":"332","endLine":22,"endColumn":47},{"ruleId":"330","severity":1,"message":"331","line":27,"column":7,"nodeType":"332","endLine":27,"endColumn":61},{"ruleId":"333","severity":1,"message":"334","line":27,"column":7,"nodeType":"332","endLine":27,"endColumn":61},{"ruleId":"336","severity":1,"message":"337","line":14,"column":13,"nodeType":"332","endLine":14,"endColumn":27},{"ruleId":"330","severity":1,"message":"331","line":14,"column":27,"nodeType":"332","endLine":14,"endColumn":75},{"ruleId":"336","severity":1,"message":"337","line":15,"column":13,"nodeType":"332","endLine":15,"endColumn":27},{"ruleId":"330","severity":1,"message":"331","line":15,"column":27,"nodeType":"332","endLine":15,"endColumn":73},{"ruleId":"336","severity":1,"message":"337","line":16,"column":13,"nodeType":"332","endLine":16,"endColumn":27},{"ruleId":"330","severity":1,"message":"331","line":16,"column":27,"nodeType":"332","endLine":16,"endColumn":77},{"ruleId":"330","severity":1,"message":"331","line":41,"column":15,"nodeType":"332","endLine":41,"endColumn":51},{"ruleId":"330","severity":1,"message":"331","line":47,"column":15,"nodeType":"332","endLine":47,"endColumn":51},{"ruleId":"330","severity":1,"message":"331","line":53,"column":15,"nodeType":"332","endLine":53,"endColumn":58},{"ruleId":"330","severity":1,"message":"331","line":61,"column":15,"nodeType":"332","endLine":61,"endColumn":61},{"ruleId":"336","severity":1,"message":"337","line":9,"column":7,"nodeType":"332","endLine":9,"endColumn":24},{"ruleId":"330","severity":1,"message":"331","line":10,"column":9,"nodeType":"332","endLine":10,"endColumn":80},{"ruleId":"330","severity":1,"message":"331","line":36,"column":17,"nodeType":"332","endLine":41,"endColumn":19},{"ruleId":"330","severity":1,"message":"331","line":12,"column":11,"nodeType":"332","endLine":12,"endColumn":72},{"ruleId":"338","severity":1,"message":"339","line":84,"column":6,"nodeType":"340","endLine":84,"endColumn":8,"suggestions":"341"},{"ruleId":"330","severity":1,"message":"331","line":275,"column":17,"nodeType":"332","endLine":275,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":342,"column":11,"nodeType":"332","endLine":342,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":88,"column":13,"nodeType":"332","endLine":88,"endColumn":52},{"ruleId":"338","severity":1,"message":"342","line":253,"column":6,"nodeType":"340","endLine":253,"endColumn":22,"suggestions":"343"},{"ruleId":"330","severity":1,"message":"331","line":259,"column":11,"nodeType":"332","endLine":259,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":316,"column":13,"nodeType":"332","endLine":316,"endColumn":58},{"ruleId":"338","severity":1,"message":"344","line":21,"column":6,"nodeType":"340","endLine":21,"endColumn":22,"suggestions":"345"},{"ruleId":"330","severity":1,"message":"331","line":28,"column":15,"nodeType":"332","endLine":28,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":38,"column":15,"nodeType":"332","endLine":38,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":48,"column":15,"nodeType":"332","endLine":48,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":58,"column":15,"nodeType":"332","endLine":58,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":68,"column":15,"nodeType":"332","endLine":68,"endColumn":54},{"ruleId":"330","severity":1,"message":"331","line":78,"column":15,"nodeType":"332","endLine":78,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":89,"column":15,"nodeType":"332","endLine":89,"endColumn":57},{"ruleId":"330","severity":1,"message":"331","line":101,"column":15,"nodeType":"332","endLine":101,"endColumn":61},{"ruleId":"338","severity":1,"message":"346","line":22,"column":6,"nodeType":"340","endLine":22,"endColumn":8,"suggestions":"347"},{"ruleId":"338","severity":1,"message":"348","line":23,"column":6,"nodeType":"340","endLine":23,"endColumn":27,"suggestions":"349"},{"ruleId":"338","severity":1,"message":"342","line":105,"column":6,"nodeType":"340","endLine":105,"endColumn":22,"suggestions":"350"},{"ruleId":"330","severity":1,"message":"331","line":286,"column":11,"nodeType":"332","endLine":286,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":343,"column":13,"nodeType":"332","endLine":343,"endColumn":58},{"ruleId":"330","severity":1,"message":"331","line":200,"column":17,"nodeType":"332","endLine":200,"endColumn":56},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@next/next/link-passhref","passHref is missing. See: https://nextjs.org/docs/messages/link-passhref","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toko'. Either include it or remove the dependency array.","ArrayExpression",["351"],"React Hook useEffect has a missing dependency: 'storeId'. Either include it or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'initTable'. Either include it or remove the dependency array.",["355"],["356"],{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"359","fix":"367"},"Update the dependencies array to be: [toko]",{"range":"368","text":"369"},"Update the dependencies array to be: [router.isReady, storeId]",{"range":"370","text":"371"},"Update the dependencies array to be: [pid, router.isReady]",{"range":"372","text":"373"},"Update the dependencies array to be: [product]",{"range":"374","text":"375"},"Update the dependencies array to be: [props.data, perPage, initTable]",{"range":"376","text":"377"},{"range":"378","text":"371"},[2227,2229],"[toko]",[6437,6453],"[router.isReady, storeId]",[549,565],"[pid, router.isReady]",[561,563],"[product]",[693,714],"[props.data, perPage, initTable]",[2633,2649]]